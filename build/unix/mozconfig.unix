. "$topsrcdir/build/mozconfig.common"

if [ -n "$FORCE_GCC" ]; then
    CC="$MOZ_FETCHES_DIR/gcc/bin/gcc"
    CXX="$MOZ_FETCHES_DIR/gcc/bin/g++"

    # We want to make sure we use binutils and other binaries in the tooltool
    # package.
    mk_add_options "export PATH=$MOZ_FETCHES_DIR/gcc/bin:$MOZ_FETCHES_DIR/binutils/bin:$PATH"
else
    # For some builds we don't want to have Clang based static-analysis activated
    if [ -z "$DISABLE_CLANG_PLUGIN" ]; then
        export ENABLE_CLANG_PLUGIN=1
    fi

    case "$PERFHERDER_EXTRA_OPTIONS" in
    base-toolchains*)
      # Clang versions < 7.0 don't support the -fcrash-diagnostics-dir flag.
      ;;
    *)
      export CFLAGS="$CFLAGS -fcrash-diagnostics-dir=${UPLOAD_PATH}"
      export CXXFLAGS="$CXXFLAGS -fcrash-diagnostics-dir=${UPLOAD_PATH}"
      ;;
    esac

    mk_add_options "export PATH=$MOZ_FETCHES_DIR/binutils/bin:$PATH"
fi

case "$PERFHERDER_EXTRA_OPTIONS" in
base-toolchains*)
  # Clang versions < 8.0 don't support wasm.
  export WASM_SANDBOXED_LIBRARIES=
  ;;
esac

. "$topsrcdir/build/unix/mozconfig.stdcxx"
