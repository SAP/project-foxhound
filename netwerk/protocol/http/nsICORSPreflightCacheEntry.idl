/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIURI;
interface nsIPrincipal;

[ref] native const_OriginAttributes(const mozilla::OriginAttributes);

/**
 * nsICORSPreflightCacheEntry
 * Defines an interface representing a cache entry in the preflight cache.
 *
 */
[builtinclass, scriptable, uuid(f43f2098-53dc-4554-b706-040b4ce1e587)]
interface nsICORSPreflightCacheEntry : nsISupports
{
  /**
   * The serialized key identifying this cache entry as a string
   */
  readonly attribute ACString key;

  /**
   * The URI used in the key
   */
  readonly attribute nsIURI URI;

  /**
   * OriginAttributes used in the key
   */
  [implicit_jscontext]
  readonly attribute jsval originAttributes;

  /**
   * Same OriginAttributes as above, callable from c++
   */
  [noscript, notxpcom, nostdcall, binaryname(OriginAttributesRef)]
  const_OriginAttributes OriginAttributesRef();

  /**
   * Principal used to generate the key serialization
   */
  readonly attribute nsIPrincipal principal;

  /**
   * Whether this cache entry is associated with private browsing.
   */
  readonly attribute boolean privateBrowsing;

  /**
   * Whether the the cache entry includes those with credentials
   */
  readonly attribute boolean withCredentials;
};
