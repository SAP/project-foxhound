/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// This file is automatically generated by the GenerateDataFromWebIdls.py
// script. Do not modify it manually.
"use strict";

module.exports = {
  DOMTokenList: {
    prototype: {
      getters: ["length", "value"],
      methods: ["item", "contains"],
    },
  },
  Document: {
    instance: {
      getters: ["location"],
    },
    prototype: {
      getters: [
        "URL",
        "documentURI",
        "compatMode",
        "characterSet",
        "charset",
        "inputEncoding",
        "contentType",
        "doctype",
        "documentElement",
        "title",
        "dir",
        "body",
        "head",
        "images",
        "embeds",
        "plugins",
        "links",
        "forms",
        "scripts",
        "defaultView",
        "currentScript",
        "anchors",
        "applets",
        "all",
        "styleSheetSets",
        "featurePolicy",
        "blockedNodeByClassifierCount",
        "blockedNodesByClassifier",
        "permDelegateHandler",
        "children",
        "firstElementChild",
        "lastElementChild",
        "childElementCount",
      ],
      methods: [
        "getSelection",
        "hasStorageAccess",
        "getElementsByTagName",
        "getElementsByTagNameNS",
        "getElementsByClassName",
        "getElementById",
        "getElementsByName",
        "querySelector",
        "querySelectorAll",
        "createNSResolver",
      ],
    },
  },
  Element: {
    prototype: {
      getters: [
        "namespaceURI",
        "prefix",
        "localName",
        "tagName",
        "id",
        "className",
        "classList",
        "part",
        "attributes",
        "innerHTML",
        "outerHTML",
        "previousElementSibling",
        "nextElementSibling",
        "children",
        "firstElementChild",
        "lastElementChild",
        "childElementCount",
      ],
      methods: [
        "getAttributeNames",
        "getAttribute",
        "getAttributeNS",
        "hasAttribute",
        "hasAttributeNS",
        "hasAttributes",
        "closest",
        "matches",
        "webkitMatchesSelector",
        "getElementsByTagName",
        "getElementsByTagNameNS",
        "getElementsByClassName",
        "mozMatchesSelector",
        "querySelector",
        "querySelectorAll",
        "getAsFlexContainer",
        "getGridFragments",
        "hasGridFragments",
        "getElementsWithGrid",
      ],
    },
  },
  FormData: {
    prototype: {
      methods: ["entries", "keys", "values"],
    },
  },
  Headers: {
    prototype: {
      methods: ["entries", "keys", "values"],
    },
  },
  Location: {
    instance: {
      getters: [
        "href",
        "origin",
        "protocol",
        "host",
        "hostname",
        "port",
        "pathname",
        "search",
        "hash",
      ],
    },
  },
  Node: {
    prototype: {
      getters: [
        "nodeType",
        "nodeName",
        "baseURI",
        "isConnected",
        "ownerDocument",
        "parentNode",
        "parentElement",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "nodeValue",
        "textContent",
        "flattenedTreeParentNode",
        "isNativeAnonymous",
        "containingShadowRoot",
        "accessibleNode",
      ],
      methods: [
        "getRootNode",
        "hasChildNodes",
        "isSameNode",
        "isEqualNode",
        "compareDocumentPosition",
        "contains",
        "lookupPrefix",
        "lookupNamespaceURI",
        "isDefaultNamespace",
      ],
    },
  },
  Performance: {
    prototype: {
      getters: ["timeOrigin", "timing", "navigation", "eventCounts"],
      methods: ["now"],
    },
  },
  Range: {
    prototype: {
      methods: [
        "isPointInRange",
        "comparePoint",
        "intersectsNode",
        "getClientRects",
        "getBoundingClientRect",
      ],
    },
  },
  Selection: {
    prototype: {
      methods: ["getRangeAt", "containsNode"],
    },
  },
  URLSearchParams: {
    prototype: {
      methods: ["entries", "keys", "values"],
    },
  },
  Window: {
    instance: {
      getters: [
        "location",
        "window",
        "self",
        "document",
        "performance",
        "browsingContext",
        "windowUtils",
        "windowGlobalChild",
        "visualViewport",
        "caches",
        "scheduler",
      ],
    },
  },
};
