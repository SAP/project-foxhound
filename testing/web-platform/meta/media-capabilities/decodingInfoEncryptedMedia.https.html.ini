[decodingInfoEncryptedMedia.https.html]
  expected:
    if (os == "android") and fission: [TIMEOUT, OK]
  [Test that decodingInfo() rejects if distinctiveIdentifier isn't valid.]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo() rejects if robustness and configuration do not match (1).]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo() rejects if persistentState isn't valid.]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo() rejects if sessionTypes isn't a sequence.]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo() rejects if robustness and configuration do not match (3).]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo() rejects if robustness and configuration do not match (2).]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo returns a valid MediaCapabilitiesDecodingInfo objects with encrypted media]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that random key systems are reported as non supported.]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that supported=false when keySystemConfiguration is unsupported.]
    expected:
      if (os == "android") and fission: [NOTRUN, FAIL]
      FAIL

  [Test that decodingInfo() does not reject when properties are set to unexpected values.]
    expected:
      if (os == "android") and fission: [NOTRUN, PASS]

  [Test that keySystemAccess is only null when not supported if keySystemConfiguration was used.]
    expected:
      if (os == "android") and fission: [NOTRUN, PASS]

  [Test that decodingInfo() accepts a key system configuration with video info.]
    expected:
      if (os == "android") and fission: [NOTRUN, PASS]

  [Test that decodingInfo() accepts a stub key system configuration (w/audio).]
    expected:
      if (os == "android") and fission: [NOTRUN, PASS]

  [Test that decodingInfo() accepts a stub key system configuration (w/video).]
    expected:
      if (os == "android") and fission: [TIMEOUT, PASS]

  [Test that decodingInfo() with type webrtc rejects key system configuration.]
    expected:
      if (os == "android") and fission: [NOTRUN, PASS]

  [Test that decodingInfo() accepts a key system configuration with audio info.]
    expected:
      if (os == "android") and fission: [NOTRUN, PASS]
