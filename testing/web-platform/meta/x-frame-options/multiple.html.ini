[multiple.html]
  disabled:
    if tsan: https://bugzilla.mozilla.org/show_bug.cgi?1682723
  expected:
    if (os == "linux") and debug and fission and swgl: [OK, TIMEOUT]
    if (os == "linux") and debug and not fission: [OK, TIMEOUT]
    if (os == "mac") and not debug: [OK, TIMEOUT]
    if (os == "android") and not debug: [OK, TIMEOUT]
  [`INVALID;` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`INVALID;INVALID` allows cross-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`INVALID,(the empty string)` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`INVALID,(the empty string)` allows cross-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`(the empty string);INVALID` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`(the empty string),INVALID` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`(the empty string);INVALID` allows cross-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`sameOrigin,SAMEORIGIN` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`(the empty string),INVALID` allows cross-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`SAMEORIGIN;SAMEORIGIN` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`sameOrigin;SAMEORIGIN` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`SAMEORIGIN;sameOrigin` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`INVALID;INVALID` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`SAMEORIGIN,sameOrigin` allows same-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`INVALID;` allows cross-origin framing]
    expected:
      if (os == "linux") and debug and fission and swgl: [PASS, TIMEOUT]
      if (os == "linux") and debug and not fission: [PASS, TIMEOUT]

  [`ALLOWALL;DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`allowAll,INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,allowAll` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,(the empty string)` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;"DENY"` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,"SAMEORIGIN"` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string),SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"DENY",SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;allowAll` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"SAMEORIGIN",DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;allowAll` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string);ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`sameOrigin;SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string);SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"DENY";SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;"SAMEORIGIN"` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`sameOrigin,SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,(the empty string)` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"SAMEORIGIN";DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`allowAll;INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"SAMEORIGIN",DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string),SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string),ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"DENY",SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,"DENY"` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,(the empty string)` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`allowAll,INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,"SAMEORIGIN"` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string);SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;DENY` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,"DENY"` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string),ALLOWALL` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,(the empty string)` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"DENY";SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`allowAll;INVALID` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY;"SAMEORIGIN"` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;"DENY"` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`(the empty string);ALLOWALL` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID;DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`INVALID,allowAll` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;SAMEORIGIN` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL,SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN;sameOrigin` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`"SAMEORIGIN";DENY` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,INVALID` blocks same-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`SAMEORIGIN,sameOrigin` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`ALLOWALL;` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]

  [`DENY,SAMEORIGIN` blocks cross-origin framing]
    expected:
      if (os == "mac") and not debug: [PASS, TIMEOUT]
      if (os == "android") and not debug: [PASS, TIMEOUT]
