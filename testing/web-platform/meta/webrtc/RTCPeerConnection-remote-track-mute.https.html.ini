[RTCPeerConnection-remote-track-mute.https.html]
  prefs: [media.peerconnection.mute_on_bye_or_timeout:true]
  expected:
    if not debug and (os == "win") and webrender and not fission: ["OK", "TIMEOUT"]
    if not debug and (os == "win") and not webrender and (processor == "x86_64"): ["OK", "TIMEOUT"]
    if not debug and (os == "linux") and not webrender: ["OK", "TIMEOUT"]
  [pc.close() on one side causes mute events on the other]
    expected:
      if (os == "win") and not debug and webrender and not fission: ["PASS", "NOTRUN"]
      if (os == "win") and not debug and not webrender and (processor == "x86_64"): ["PASS", "NOTRUN"]

  [Changing transceiver direction to 'sendrecv' unmutes the remote track]
    expected:
      if (os == "win") and not debug and webrender and not fission: ["PASS", "FAIL", "NOTRUN"]
      if (os == "win") and not debug and not webrender and (processor == "x86_64"): ["PASS", "NOTRUN"]
      if (os == "win") and not debug and not webrender and (processor == "x86"): ["PASS", "FAIL"]

  [transceiver.stop() on one side (without renegotiation) causes mute events on the other]
    expected:
      if (os == "win") and not debug and webrender and not fission: ["PASS", "NOTRUN"]
      if (os == "win") and not debug and not webrender and (processor == "x86_64"): ["PASS", "NOTRUN"]

  [Changing transceiver direction to 'inactive' mutes the remote track]
    expected:
      if (os == "win") and not debug and webrender and not fission: ["PASS", "TIMEOUT", "NOTRUN"]
      if (os == "win") and not debug and not webrender and (processor == "x86_64"): ["PASS", "NOTRUN"]

  [ontrack: track goes from muted to unmuted]
    expected:
      if (os == "win") and not debug and webrender and not fission: ["PASS", "TIMEOUT"]
      if (os == "win") and not debug and not webrender and (processor == "x86_64"): ["PASS", "TIMEOUT"]

