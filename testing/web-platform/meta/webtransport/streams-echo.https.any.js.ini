[streams-echo.https.any.html]
  expected:
    if (os == "linux") and not tsan and not fission and not debug: [CRASH, OK, TIMEOUT]
    if (os == "win") and debug and (processor == "x86_64"): [CRASH, OK, ERROR, TIMEOUT]
    if (os == "win") and debug and (processor == "x86"): [OK, ERROR, TIMEOUT]
    if (os == "linux") and tsan: [OK, ERROR, TIMEOUT]
    [OK, TIMEOUT]
  [WebTransport client should be able to create and handle a bidirectional stream without waiting for ready]
    expected:
      if (processor == "x86") and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create and handle a bidirectional stream]
    expected:
      if (processor == "x86") and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream without waiting for ready]
    expected:
      if (processor == "x86") and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      [PASS, TIMEOUT, NOTRUN]

  [WebTransport server should be able to accept and handle a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a bidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a unidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Closing the stream with no data still resolves the read request]
    expected: [PASS, TIMEOUT, NOTRUN]


[streams-echo.https.any.worker.html]
  expected:
    if (os == "linux") and not tsan and not debug and fission and asan: [CRASH, OK, TIMEOUT]
    if (os == "linux") and not tsan and debug and not fission: [CRASH, OK, TIMEOUT]
    if (os == "mac") and debug: [OK, TIMEOUT]
    if (os == "mac") and not debug: [OK, CRASH, TIMEOUT]
    if (os == "linux") and tsan: [TIMEOUT, OK, CRASH]
    [OK, TIMEOUT, CRASH]
  [WebTransport client should be able to create and handle a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream without waiting for ready]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create and handle a bidirectional stream without waiting for ready]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport server should be able to accept and handle a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a bidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a unidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Closing the stream with no data still resolves the read request]
    expected: [PASS, TIMEOUT, NOTRUN]


[streams-echo.https.any.sharedworker.html]
  expected:
    if debug and (os == "linux") and fission: [CRASH, OK, TIMEOUT]
    if debug and (os == "win"): [OK, ERROR, TIMEOUT, CRASH]
    if debug and (os == "mac"): [OK, TIMEOUT]
    [OK, TIMEOUT, CRASH]
  [WebTransport client should be able to create, accept, and handle a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream without waiting for ready]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create and handle a bidirectional stream without waiting for ready]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport server should be able to accept and handle a bidirectional stream]
    expected:
      if (os == "win") and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      [PASS, TIMEOUT, NOTRUN]

  [Can read data from a bidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a unidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Closing the stream with no data still resolves the read request]
    expected: [PASS, TIMEOUT, NOTRUN]


[streams-echo.https.any.serviceworker.html]
  expected:
    if fission and (os == "win") and debug and (processor == "x86"): [CRASH, OK, ERROR, TIMEOUT]
    if fission and (os == "mac") and debug: [CRASH, OK, TIMEOUT]
    if not fission: [OK, ERROR, TIMEOUT, CRASH]
    [OK, ERROR, TIMEOUT]
  [WebTransport client should be able to create and handle a bidirectional stream without waiting for ready]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create, accept, and handle a unidirectional stream without waiting for ready]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport server should be able to accept and handle a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a bidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Can read data from a unidirectional stream with BYOB reader]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a bidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Transfer large chunks of data on a unidirectional stream]
    expected: [PASS, TIMEOUT, NOTRUN]

  [Closing the stream with no data still resolves the read request]
    expected: [PASS, TIMEOUT, NOTRUN]

  [WebTransport client should be able to create and handle a bidirectional stream]
    expected:
      if (os == "win") and debug: [PASS, TIMEOUT]
