[fetch-event-handled.https.html]
  expected:
    if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [OK, TIMEOUT]
  [FetchEvent.handled should resolve when respondWith() is not called for a navigation request]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, TIMEOUT]

  [FetchEvent.handled should resolve when respondWith() is not called for a sub-resource request]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, NOTRUN]

  [FetchEvent.handled should reject when respondWith() is not called and the event is canceled]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, NOTRUN]

  [FetchEvent.handled should resolve when the promise provided to respondWith() is resolved]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, NOTRUN]

  [FetchEvent.handled should reject when the promise provided to respondWith() is resolved to an invalid response]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, NOTRUN]

  [FetchEvent.handled should reject when the promise provided to respondWith() is rejected]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, NOTRUN]

  [global cleanup]
    expected:
      if (os == "linux") and not debug and not asan and (processor == "x86_64") and not tsan: [PASS, NOTRUN]
