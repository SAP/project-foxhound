[cache-match.https.any.html]
  expected:
    if (processor == "x86") and not debug: [OK, TIMEOUT]
  [Cache.match ignores vary headers on opaque response.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with string fragment "http" as query]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with search parameter)]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [cors-exposed header should be stored correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match supports ignoreMethod]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [MIME type should reflect Content-Type headers of response.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with POST Request]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match invoked multiple times for the same Request/Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with no search parameters)]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache produces large Responses that can be cloned and read correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with a non-2xx Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with Request and Response objects with different URLs]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match does not support cacheName option]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match blob should be sliceable]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with responses containing "Vary" header]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with new Request]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [MIME type should be set from content-header correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with multiple cache hits]
    expected:
      if (processor == "x86") and not debug: [PASS, TIMEOUT]

  [Cache.match supports ignoreVary]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with URL containing fragment]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with HEAD]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with a network error Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]


[cache-match.https.any.worker.html]
  expected:
    if (processor == "x86") and not debug: [OK, TIMEOUT]
  [Cache.match ignores vary headers on opaque response.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with string fragment "http" as query]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with search parameter)]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [cors-exposed header should be stored correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match supports ignoreMethod]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [MIME type should reflect Content-Type headers of response.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with POST Request]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match invoked multiple times for the same Request/Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with no search parameters)]
    expected:
      if (processor == "x86") and not debug: [PASS, TIMEOUT]

  [Cache produces large Responses that can be cloned and read correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with a non-2xx Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with Request and Response objects with different URLs]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match does not support cacheName option]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match blob should be sliceable]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with responses containing "Vary" header]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [MIME type should be set from content-header correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match supports ignoreVary]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with URL containing fragment]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with a network error Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]


[cache-match.https.any.sharedworker.html]
  expected:
    if (processor == "x86") and not debug: [OK, TIMEOUT]
  [Cache.match ignores vary headers on opaque response.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with string fragment "http" as query]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with search parameter)]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [cors-exposed header should be stored correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match supports ignoreMethod]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [MIME type should reflect Content-Type headers of response.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with POST Request]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match invoked multiple times for the same Request/Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with no search parameters)]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache produces large Responses that can be cloned and read correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with a non-2xx Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with Request and Response objects with different URLs]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match does not support cacheName option]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match blob should be sliceable]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with responses containing "Vary" header]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with new Request]
    expected:
      if (processor == "x86") and not debug: [PASS, TIMEOUT]

  [MIME type should be set from content-header correctly.]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match supports ignoreVary]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with URL containing fragment]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with HEAD]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]

  [Cache.match with a network error Response]
    expected:
      if (processor == "x86") and not debug: [PASS, NOTRUN]


[cache-match.https.any.serviceworker.html]
  disabled:
    if privateBrowsing: https://bugzilla.mozilla.org/show_bug.cgi?id=1320796
  expected:
    if (processor == "x86") and (os == "win") and not debug: [OK, TIMEOUT]
  [Cache.match ignores vary headers on opaque response.]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]
      PASS

  [Cache.match with string fragment "http" as query]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with search parameter)]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [cors-exposed header should be stored correctly.]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match supports ignoreMethod]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [MIME type should reflect Content-Type headers of response.]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with POST Request]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match invoked multiple times for the same Request/Response]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with ignoreSearch option (request with no search parameters)]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache produces large Responses that can be cloned and read correctly.]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with a non-2xx Response]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with Request and Response objects with different URLs]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match does not support cacheName option]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match blob should be sliceable]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with responses containing "Vary" header]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with new Request]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [MIME type should be set from content-header correctly.]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with multiple cache hits]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with Request]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, TIMEOUT]

  [Cache.match supports ignoreVary]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with URL containing fragment]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with HEAD]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]

  [Cache.match with a network error Response]
    expected:
      if (processor == "x86") and (os == "win") and not debug: [PASS, NOTRUN]
