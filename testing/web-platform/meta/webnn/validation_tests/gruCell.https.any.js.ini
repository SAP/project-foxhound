[gruCell.https.any.worker.html]
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[gruCell\] throw if input is from another builder]
    expected: FAIL

  [[gruCell\] throw if weight is from another builder]
    expected: FAIL

  [[gruCell\] throw if recurrentWeight is from another builder]
    expected: FAIL

  [[gruCell\] throw if hiddenState is from another builder]
    expected: FAIL

  [[gruCell\] throw if bias option is from another builder]
    expected: FAIL

  [[gruCell\] throw if recurrentBias option is from another builder]
    expected: FAIL

  [[gruCell\] throw if any activation option is from another builder]
    expected: FAIL

  [[gruCell\] Test with default options]
    expected: FAIL

  [[gruCell\] Test with given options]
    expected: FAIL

  [[gruCell\] Throw if hiddenSize equals to zero]
    expected: FAIL

  [[gruCell\] Throw if hiddenSize is too large]
    expected: FAIL

  [[gruCell\] Throw if the data type of the inputs is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of input is not 2]
    expected: FAIL

  [[gruCell\] Throw if the input.dimensions[1\] is incorrect]
    expected: FAIL

  [[gruCell\] Throw if data type of weight is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if rank of weight is not 2]
    expected: FAIL

  [[gruCell\] Throw if weight.dimensions[0\] is not 3 * hiddenSize]
    expected: FAIL

  [[gruCell\] Throw if data type of recurrentWeight is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of recurrentWeight is not 2]
    expected: FAIL

  [[gruCell\] Throw if the recurrentWeight.dimensions is invalid]
    expected: FAIL

  [[gruCell\] Throw if data type of hiddenState is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of hiddenState is not 2]
    expected: FAIL

  [[gruCell\] Throw if the hiddenState.dimensions is invalid]
    expected: FAIL

  [[gruCell\] Throw if the size of options.activations is not 2]
    expected: FAIL

  [[gruCell\] Throw if data type of options.bias is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of options.bias is not 1]
    expected: FAIL

  [[gruCell\] Throw if options.bias.dimensions[0\] is not 3 * hiddenSize]
    expected: FAIL

  [[gruCell\] Throw if data type of options.recurrentBias is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of options.recurrentBias is not 1]
    expected: FAIL

  [[gruCell\] Throw if options.recurrentBias.dimensions[0\] is not 3 * hiddenSize]
    expected: FAIL


[gruCell.https.any.html]
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[gruCell\] throw if input is from another builder]
    expected: FAIL

  [[gruCell\] throw if weight is from another builder]
    expected: FAIL

  [[gruCell\] throw if recurrentWeight is from another builder]
    expected: FAIL

  [[gruCell\] throw if hiddenState is from another builder]
    expected: FAIL

  [[gruCell\] throw if bias option is from another builder]
    expected: FAIL

  [[gruCell\] throw if recurrentBias option is from another builder]
    expected: FAIL

  [[gruCell\] throw if any activation option is from another builder]
    expected: FAIL

  [[gruCell\] Test with default options]
    expected: FAIL

  [[gruCell\] Test with given options]
    expected: FAIL

  [[gruCell\] Throw if hiddenSize equals to zero]
    expected: FAIL

  [[gruCell\] Throw if hiddenSize is too large]
    expected: FAIL

  [[gruCell\] Throw if the data type of the inputs is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of input is not 2]
    expected: FAIL

  [[gruCell\] Throw if the input.dimensions[1\] is incorrect]
    expected: FAIL

  [[gruCell\] Throw if data type of weight is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if rank of weight is not 2]
    expected: FAIL

  [[gruCell\] Throw if weight.dimensions[0\] is not 3 * hiddenSize]
    expected: FAIL

  [[gruCell\] Throw if data type of recurrentWeight is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of recurrentWeight is not 2]
    expected: FAIL

  [[gruCell\] Throw if the recurrentWeight.dimensions is invalid]
    expected: FAIL

  [[gruCell\] Throw if data type of hiddenState is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of hiddenState is not 2]
    expected: FAIL

  [[gruCell\] Throw if the hiddenState.dimensions is invalid]
    expected: FAIL

  [[gruCell\] Throw if the size of options.activations is not 2]
    expected: FAIL

  [[gruCell\] Throw if data type of options.bias is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of options.bias is not 1]
    expected: FAIL

  [[gruCell\] Throw if options.bias.dimensions[0\] is not 3 * hiddenSize]
    expected: FAIL

  [[gruCell\] Throw if data type of options.recurrentBias is not one of the floating point types]
    expected: FAIL

  [[gruCell\] Throw if the rank of options.recurrentBias is not 1]
    expected: FAIL

  [[gruCell\] Throw if options.recurrentBias.dimensions[0\] is not 3 * hiddenSize]
    expected: FAIL
