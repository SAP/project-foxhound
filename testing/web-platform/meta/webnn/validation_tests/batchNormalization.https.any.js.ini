[batchNormalization.https.any.worker.html]
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[batchNormalization\] TypeError is expected if options.axis is outside the 'unsigned long' value range]
    expected: FAIL

  [[batchNormalization\] DataError is expected if options.axis is 'unsigned long' and it's not in the range 0 to the rank of input, exclusive]
    expected: FAIL

  [[batchNormalization\] TypeError is expected if options.axis is not an unsigned long interger]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of mean.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if mean.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of variance.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if variance.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of scale.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if scale.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of bias.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if bias.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] throw if input is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if mean is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if variance is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if scale option is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if bias option is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if activation option is from another builder]
    expected: FAIL


[batchNormalization.https.any.html]
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[batchNormalization\] TypeError is expected if options.axis is outside the 'unsigned long' value range]
    expected: FAIL

  [[batchNormalization\] DataError is expected if options.axis is 'unsigned long' and it's not in the range 0 to the rank of input, exclusive]
    expected: FAIL

  [[batchNormalization\] TypeError is expected if options.axis is not an unsigned long interger]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of mean.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if mean.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of variance.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if variance.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of scale.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if scale.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] DataError is expected if the size of bias.dimensions is not 1]
    expected: FAIL

  [[batchNormalization\] DataError is expected if bias.dimensions[0\] is not equal to input.dimensions[options.axis\]]
    expected: FAIL

  [[batchNormalization\] throw if input is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if mean is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if variance is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if scale option is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if bias option is from another builder]
    expected: FAIL

  [[batchNormalization\] throw if activation option is from another builder]
    expected: FAIL
