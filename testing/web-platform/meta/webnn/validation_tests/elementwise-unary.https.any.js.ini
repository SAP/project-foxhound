[elementwise-unary.https.any.worker.html]
  expected: ERROR
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[abs\] throw if input is from another builder]
    expected: FAIL

  [[ceil\] throw if input is from another builder]
    expected: FAIL

  [[cos\] throw if input is from another builder]
    expected: FAIL

  [[erf\] throw if input is from another builder]
    expected: FAIL

  [[exp\] throw if input is from another builder]
    expected: FAIL

  [[floor\] throw if input is from another builder]
    expected: FAIL

  [[identity\] throw if input is from another builder]
    expected: FAIL

  [[log\] throw if input is from another builder]
    expected: FAIL

  [[neg\] throw if input is from another builder]
    expected: FAIL

  [[reciprocal\] throw if input is from another builder]
    expected: FAIL

  [[sin\] throw if input is from another builder]
    expected: FAIL

  [[sqrt\] throw if input is from another builder]
    expected: FAIL

  [[tan\] throw if input is from another builder]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3,4,5,6\]]
    expected: FAIL


[elementwise-unary.https.any.html]
  expected: ERROR
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[abs\] throw if input is from another builder]
    expected: FAIL

  [[ceil\] throw if input is from another builder]
    expected: FAIL

  [[cos\] throw if input is from another builder]
    expected: FAIL

  [[erf\] throw if input is from another builder]
    expected: FAIL

  [[exp\] throw if input is from another builder]
    expected: FAIL

  [[floor\] throw if input is from another builder]
    expected: FAIL

  [[identity\] throw if input is from another builder]
    expected: FAIL

  [[log\] throw if input is from another builder]
    expected: FAIL

  [[neg\] throw if input is from another builder]
    expected: FAIL

  [[reciprocal\] throw if input is from another builder]
    expected: FAIL

  [[sin\] throw if input is from another builder]
    expected: FAIL

  [[sqrt\] throw if input is from another builder]
    expected: FAIL

  [[tan\] throw if input is from another builder]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float32, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = float16, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int32, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int64, dimensions = [2,3,4,5,6\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3,4\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3,4,5\]]
    expected: FAIL

  [[abs\] Test building an operator, dataType = int8, dimensions = [2,3,4,5,6\]]
    expected: FAIL
