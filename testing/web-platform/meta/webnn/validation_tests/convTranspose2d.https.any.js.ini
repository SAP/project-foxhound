[convTranspose2d.https.any.worker.html]
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[convTranspose2d\] throw if input is from another builder]
    expected: FAIL

  [[convTranspose2d\] throw if filter is from another builder]
    expected: FAIL

  [[convTranspose2d\] throw if bias option is from another builder]
    expected: FAIL

  [[convTranspose2d\] throw if activation option is from another builder]
    expected: FAIL

  [[convTranspose2d\] Test with default options.]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nchw" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nchw" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nhwc" and filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nhwc" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nhwc" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Test with strides=[3, 2\], outputSizes=[10, 8\].]
    expected: FAIL

  [[convTranspose2d\] Test with strides=[3, 2\], outputPadding=[1, 1\].]
    expected: FAIL

  [[convTranspose2d\] Test with padding=1.]
    expected: FAIL

  [[convTranspose2d\] Test with padding=1, groups=3.]
    expected: FAIL

  [[convTranspose2d\] Test with strides=2.]
    expected: FAIL

  [[convTranspose2d\] Test with strides=2 and padding=1.]
    expected: FAIL

  [[convTranspose2d\] Test when the output sizes are explicitly specified, the output padding values are ignored though padding value is not smaller than stride along the same axis.]
    expected: FAIL

  [[convTranspose2d\] Throw if the output operand 's number of elements is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the input is not a 4-D tensor.]
    expected: FAIL

  [[convTranspose2d\] Throw if the filter is not a 4-D tensor.]
    expected: FAIL

  [[convTranspose2d\] Throw if the filter data type doesn't match the input data type.]
    expected: FAIL

  [[convTranspose2d\] Throw if the length of padding is not 4.]
    expected: FAIL

  [[convTranspose2d\] Throw if the length of strides is not 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if one stride value is smaller than 1.]
    expected: FAIL

  [[convTranspose2d\] Throw if the length of dilations is not 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if the one dilation value is smaller than 1.]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nchw" and filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nchw" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nchw" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nhwc" and filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels inputLayout="nhwc" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nhwc" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Throw if output channels is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the groups is smaller than 1.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when calculating the effective filter height.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when calculating the effective filter width.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when dilation height is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when dilation width is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias is not a 1-D tensor.]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias shape is not equal to [output_channels\] with filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias shape is not equal to [output_channels\] with filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias shape is not equal to [output_channels\] with filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias data type doesn't match input data type.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputPadding is not a sequence of length 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputPadding is not smaller than stride along the width dimension.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputPadding is not smaller than stride along the height dimension.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputSizes is not a sequence of length 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if the padding height is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the padding width is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw due to outputSizes values are smaller than the output sizes calculated by not using outputPadding.]
    expected: FAIL

  [[convTranspose2d\] Throw due to outputSizes values are greater than the output sizes calculated by not using outputPadding.]
    expected: FAIL


[convTranspose2d.https.any.html]
  [assert_not_equals(navigator.ml, undefined, "ml property is defined on navigator")]
    expected: FAIL

  [[convTranspose2d\] throw if input is from another builder]
    expected: FAIL

  [[convTranspose2d\] throw if filter is from another builder]
    expected: FAIL

  [[convTranspose2d\] throw if bias option is from another builder]
    expected: FAIL

  [[convTranspose2d\] throw if activation option is from another builder]
    expected: FAIL

  [[convTranspose2d\] Test with default options.]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nchw" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nchw" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nhwc" and filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nhwc" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Test with inputLayout="nhwc" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Test with strides=[3, 2\], outputSizes=[10, 8\].]
    expected: FAIL

  [[convTranspose2d\] Test with strides=[3, 2\], outputPadding=[1, 1\].]
    expected: FAIL

  [[convTranspose2d\] Test with padding=1.]
    expected: FAIL

  [[convTranspose2d\] Test with padding=1, groups=3.]
    expected: FAIL

  [[convTranspose2d\] Test with strides=2.]
    expected: FAIL

  [[convTranspose2d\] Test with strides=2 and padding=1.]
    expected: FAIL

  [[convTranspose2d\] Test when the output sizes are explicitly specified, the output padding values are ignored though padding value is not smaller than stride along the same axis.]
    expected: FAIL

  [[convTranspose2d\] Throw if the output operand 's number of elements is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the input is not a 4-D tensor.]
    expected: FAIL

  [[convTranspose2d\] Throw if the filter is not a 4-D tensor.]
    expected: FAIL

  [[convTranspose2d\] Throw if the filter data type doesn't match the input data type.]
    expected: FAIL

  [[convTranspose2d\] Throw if the length of padding is not 4.]
    expected: FAIL

  [[convTranspose2d\] Throw if the length of strides is not 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if one stride value is smaller than 1.]
    expected: FAIL

  [[convTranspose2d\] Throw if the length of dilations is not 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if the one dilation value is smaller than 1.]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nchw" and filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nchw" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nchw" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nhwc" and filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels inputLayout="nhwc" and filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the input channels is not equal to the filter input channels with inputLayout="nhwc" and filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Throw if output channels is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the groups is smaller than 1.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when calculating the effective filter height.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when calculating the effective filter width.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when dilation height is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw due to overflow when dilation width is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias is not a 1-D tensor.]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias shape is not equal to [output_channels\] with filterLayout="iohw".]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias shape is not equal to [output_channels\] with filterLayout="hwoi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias shape is not equal to [output_channels\] with filterLayout="ohwi".]
    expected: FAIL

  [[convTranspose2d\] Throw if the bias data type doesn't match input data type.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputPadding is not a sequence of length 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputPadding is not smaller than stride along the width dimension.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputPadding is not smaller than stride along the height dimension.]
    expected: FAIL

  [[convTranspose2d\] Throw if the outputSizes is not a sequence of length 2.]
    expected: FAIL

  [[convTranspose2d\] Throw if the padding height is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw if the padding width is too large.]
    expected: FAIL

  [[convTranspose2d\] Throw due to outputSizes values are smaller than the output sizes calculated by not using outputPadding.]
    expected: FAIL

  [[convTranspose2d\] Throw due to outputSizes values are greater than the output sizes calculated by not using outputPadding.]
    expected: FAIL
