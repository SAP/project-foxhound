[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxVertexBuffers:createRenderPipeline,at_over:*]
  [:limitTest="atDefault";testValueName="atLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="overLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="overLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="overLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="overLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="overMaximum";testValueName="atLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="overLimit";async=false;pipelineType="withLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="overLimit";async=false;pipelineType="withoutLocations"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="overLimit";async=true;pipelineType="withLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;pipelineType="withoutLocations"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL


[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxVertexBuffers:setVertexBuffer,at_over:*]
  [:limitTest="atDefault";testValueName="atLimit";encoderType="render"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="atLimit";encoderType="renderBundle"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atDefault";testValueName="overLimit";encoderType="render"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atDefault";testValueName="overLimit";encoderType="renderBundle"]

  [:limitTest="atMaximum";testValueName="atLimit";encoderType="render"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="atLimit";encoderType="renderBundle"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="atMaximum";testValueName="overLimit";encoderType="render"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="overLimit";encoderType="renderBundle"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";encoderType="render"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";encoderType="renderBundle"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";encoderType="render"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";encoderType="renderBundle"]

  [:limitTest="overMaximum";testValueName="atLimit";encoderType="render"]

  [:limitTest="overMaximum";testValueName="atLimit";encoderType="renderBundle"]

  [:limitTest="overMaximum";testValueName="overLimit";encoderType="render"]

  [:limitTest="overMaximum";testValueName="overLimit";encoderType="renderBundle"]

  [:limitTest="underDefault";testValueName="atLimit";encoderType="render"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="atLimit";encoderType="renderBundle"]
    expected:
      if os == "win" and not debug: [PASS, FAIL]

  [:limitTest="underDefault";testValueName="overLimit";encoderType="render"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:limitTest="underDefault";testValueName="overLimit";encoderType="renderBundle"]


[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxVertexBuffers:validate,maxBindGroupsPlusVertexBuffers:*]
  [:]
    expected:
      if os == "win" and not debug: [PASS, FAIL]
