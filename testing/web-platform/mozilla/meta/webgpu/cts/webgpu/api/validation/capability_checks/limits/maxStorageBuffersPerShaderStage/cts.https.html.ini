[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxStorageBuffersPerShaderStage:createBindGroupLayout,at_over:*]
  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]


[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxStorageBuffersPerShaderStage:createPipeline,at_over:*]
  implementation-status: backlog
  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="overMaximum";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="atLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=false;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="compute";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="fragment";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertex";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleFragmentStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="backward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="forward";bindGroupTest="sameGroup"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="differentGroups"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";async=true;bindingCombination="vertexAndFragmentWithPossibleVertexStageOverflow";order="shiftByHalf";bindGroupTest="sameGroup"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,capability_checks,limits,maxStorageBuffersPerShaderStage:createPipelineLayout,at_over:*]
  implementation-status: backlog
  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atDefault";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]
    expected:
      if os == "mac": FAIL

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="atMaximum";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="betweenDefaultAndMaximum";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="overMaximum";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=2;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=4;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=6;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="atLimit";visibility=7;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=1;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=2;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=3;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=4;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=5;type="storage";order="shiftByHalf"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=6;type="storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="backward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="forward"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="read-only-storage";order="shiftByHalf"]
    expected: FAIL

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="storage";order="backward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="storage";order="forward"]

  [:limitTest="underDefault";testValueName="overLimit";visibility=7;type="storage";order="shiftByHalf"]
