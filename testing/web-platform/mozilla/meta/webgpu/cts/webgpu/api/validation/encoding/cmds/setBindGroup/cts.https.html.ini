[cts.https.html?q=webgpu:api,validation,encoding,cmds,setBindGroup:bind_group,device_mismatch:*]
  [:encoderType="compute%20pass"]

  [:encoderType="render%20bundle"]

  [:encoderType="render%20pass"]


[cts.https.html?q=webgpu:api,validation,encoding,cmds,setBindGroup:buffer_dynamic_offsets:*]
  [:type="read-only-storage";encoderType="compute%20pass"]

  [:type="read-only-storage";encoderType="render%20bundle"]

  [:type="read-only-storage";encoderType="render%20pass"]

  [:type="storage";encoderType="compute%20pass"]

  [:type="storage";encoderType="render%20bundle"]

  [:type="storage";encoderType="render%20pass"]

  [:type="uniform";encoderType="compute%20pass"]

  [:type="uniform";encoderType="render%20bundle"]

  [:type="uniform";encoderType="render%20pass"]


[cts.https.html?q=webgpu:api,validation,encoding,cmds,setBindGroup:dynamic_offsets_match_expectations_in_pass_encoder:*]
  [:encoderType="compute%20pass";dynamicOffsets=[0,1024\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[0,1024\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[0,4294967295\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[0,4294967295\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[0,512\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[0,512\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[1,2\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[1,2\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[1024,0\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[1024,0\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[256,0,0\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[256,0,0\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[256,0\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[256,0\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[256\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[256\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[4294967295,0\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[4294967295,0\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[512,0\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[512,0\];useU32array=true]

  [:encoderType="compute%20pass";dynamicOffsets=[\];useU32array=false]

  [:encoderType="compute%20pass";dynamicOffsets=[\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[0,1024\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[0,1024\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[0,4294967295\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[0,4294967295\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[0,512\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[0,512\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[1,2\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[1,2\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[1024,0\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[1024,0\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[256,0,0\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[256,0,0\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[256,0\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[256,0\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[256\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[256\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[4294967295,0\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[4294967295,0\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[512,0\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[512,0\];useU32array=true]

  [:encoderType="render%20bundle";dynamicOffsets=[\];useU32array=false]

  [:encoderType="render%20bundle";dynamicOffsets=[\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[0,1024\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[0,1024\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[0,4294967295\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[0,4294967295\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[0,512\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[0,512\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[1,2\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[1,2\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[1024,0\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[1024,0\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[256,0,0\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[256,0,0\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[256,0\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[256,0\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[256\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[256\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[4294967295,0\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[4294967295,0\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[512,0\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[512,0\];useU32array=true]

  [:encoderType="render%20pass";dynamicOffsets=[\];useU32array=false]

  [:encoderType="render%20pass";dynamicOffsets=[\];useU32array=true]


[cts.https.html?q=webgpu:api,validation,encoding,cmds,setBindGroup:dynamic_offsets_passed_but_not_expected:*]
  [:encoderType="compute%20pass"]

  [:encoderType="render%20bundle"]

  [:encoderType="render%20pass"]


[cts.https.html?q=webgpu:api,validation,encoding,cmds,setBindGroup:state_and_binding_index:*]
  implementation-status: backlog
  expected:
    if os == "linux" and not debug: [OK, CRASH]
  [:encoderType="compute%20pass";state="destroyed";resourceType="buffer"]
    expected: FAIL

  [:encoderType="compute%20pass";state="destroyed";resourceType="texture"]

  [:encoderType="compute%20pass";state="invalid";resourceType="buffer"]

  [:encoderType="compute%20pass";state="invalid";resourceType="texture"]

  [:encoderType="compute%20pass";state="valid";resourceType="buffer"]

  [:encoderType="compute%20pass";state="valid";resourceType="texture"]

  [:encoderType="render%20bundle";state="destroyed";resourceType="buffer"]
    expected: FAIL

  [:encoderType="render%20bundle";state="destroyed";resourceType="texture"]

  [:encoderType="render%20bundle";state="invalid";resourceType="buffer"]

  [:encoderType="render%20bundle";state="invalid";resourceType="texture"]

  [:encoderType="render%20bundle";state="valid";resourceType="buffer"]

  [:encoderType="render%20bundle";state="valid";resourceType="texture"]

  [:encoderType="render%20pass";state="destroyed";resourceType="buffer"]
    expected: FAIL

  [:encoderType="render%20pass";state="destroyed";resourceType="texture"]

  [:encoderType="render%20pass";state="invalid";resourceType="buffer"]

  [:encoderType="render%20pass";state="invalid";resourceType="texture"]

  [:encoderType="render%20pass";state="valid";resourceType="buffer"]

  [:encoderType="render%20pass";state="valid";resourceType="texture"]


[cts.https.html?q=webgpu:api,validation,encoding,cmds,setBindGroup:u32array_start_and_length:*]
  implementation-status: backlog
  [:]
    expected: FAIL
