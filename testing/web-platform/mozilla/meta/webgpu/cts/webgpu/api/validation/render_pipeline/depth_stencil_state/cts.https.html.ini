[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depthCompare_optional:*]
  implementation-status: backlog
  [:isAsync=false;format="depth16unorm"]
    expected: FAIL

  [:isAsync=false;format="depth24plus"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=false;format="depth32float"]
    expected: FAIL

  [:isAsync=false;format="depth32float-stencil8"]
    expected: FAIL

  [:isAsync=false;format="stencil8"]

  [:isAsync=true;format="depth16unorm"]
    expected: FAIL

  [:isAsync=true;format="depth24plus"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth32float"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8"]
    expected: FAIL

  [:isAsync=true;format="stencil8"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depthWriteEnabled_optional:*]
  implementation-status: backlog
  [:isAsync=false;format="depth16unorm"]
    expected: FAIL

  [:isAsync=false;format="depth24plus"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=false;format="depth32float"]
    expected: FAIL

  [:isAsync=false;format="depth32float-stencil8"]
    expected: FAIL

  [:isAsync=false;format="stencil8"]

  [:isAsync=true;format="depth16unorm"]
    expected: FAIL

  [:isAsync=true;format="depth24plus"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth32float"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8"]
    expected: FAIL

  [:isAsync=true;format="stencil8"]


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depth_test:*]
  implementation-status: backlog
  [:isAsync=false;format="depth16unorm";depthCompare="always"]

  [:isAsync=false;format="depth16unorm";depthCompare="equal"]

  [:isAsync=false;format="depth16unorm";depthCompare="greater"]

  [:isAsync=false;format="depth16unorm";depthCompare="greater-equal"]

  [:isAsync=false;format="depth16unorm";depthCompare="less"]

  [:isAsync=false;format="depth16unorm";depthCompare="less-equal"]

  [:isAsync=false;format="depth16unorm";depthCompare="never"]

  [:isAsync=false;format="depth16unorm";depthCompare="not-equal"]

  [:isAsync=false;format="depth24plus";depthCompare="always"]

  [:isAsync=false;format="depth24plus";depthCompare="equal"]

  [:isAsync=false;format="depth24plus";depthCompare="greater"]

  [:isAsync=false;format="depth24plus";depthCompare="greater-equal"]

  [:isAsync=false;format="depth24plus";depthCompare="less"]

  [:isAsync=false;format="depth24plus";depthCompare="less-equal"]

  [:isAsync=false;format="depth24plus";depthCompare="never"]

  [:isAsync=false;format="depth24plus";depthCompare="not-equal"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="always"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="equal"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="greater"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="greater-equal"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="less"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="less-equal"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="never"]

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="not-equal"]

  [:isAsync=false;format="depth32float";depthCompare="always"]

  [:isAsync=false;format="depth32float";depthCompare="equal"]

  [:isAsync=false;format="depth32float";depthCompare="greater"]

  [:isAsync=false;format="depth32float";depthCompare="greater-equal"]

  [:isAsync=false;format="depth32float";depthCompare="less"]

  [:isAsync=false;format="depth32float";depthCompare="less-equal"]

  [:isAsync=false;format="depth32float";depthCompare="never"]

  [:isAsync=false;format="depth32float";depthCompare="not-equal"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="always"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="equal"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="greater"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="greater-equal"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="less"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="less-equal"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="never"]

  [:isAsync=false;format="depth32float-stencil8";depthCompare="not-equal"]

  [:isAsync=false;format="stencil8";depthCompare="always"]

  [:isAsync=false;format="stencil8";depthCompare="equal"]

  [:isAsync=false;format="stencil8";depthCompare="greater"]

  [:isAsync=false;format="stencil8";depthCompare="greater-equal"]

  [:isAsync=false;format="stencil8";depthCompare="less"]

  [:isAsync=false;format="stencil8";depthCompare="less-equal"]

  [:isAsync=false;format="stencil8";depthCompare="never"]

  [:isAsync=false;format="stencil8";depthCompare="not-equal"]

  [:isAsync=true;format="depth16unorm";depthCompare="always"]

  [:isAsync=true;format="depth16unorm";depthCompare="equal"]

  [:isAsync=true;format="depth16unorm";depthCompare="greater"]

  [:isAsync=true;format="depth16unorm";depthCompare="greater-equal"]

  [:isAsync=true;format="depth16unorm";depthCompare="less"]

  [:isAsync=true;format="depth16unorm";depthCompare="less-equal"]

  [:isAsync=true;format="depth16unorm";depthCompare="never"]

  [:isAsync=true;format="depth16unorm";depthCompare="not-equal"]

  [:isAsync=true;format="depth24plus";depthCompare="always"]

  [:isAsync=true;format="depth24plus";depthCompare="equal"]

  [:isAsync=true;format="depth24plus";depthCompare="greater"]

  [:isAsync=true;format="depth24plus";depthCompare="greater-equal"]

  [:isAsync=true;format="depth24plus";depthCompare="less"]

  [:isAsync=true;format="depth24plus";depthCompare="less-equal"]

  [:isAsync=true;format="depth24plus";depthCompare="never"]

  [:isAsync=true;format="depth24plus";depthCompare="not-equal"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="always"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="equal"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="greater"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="greater-equal"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="less"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="less-equal"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="never"]

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="not-equal"]

  [:isAsync=true;format="depth32float";depthCompare="always"]

  [:isAsync=true;format="depth32float";depthCompare="equal"]

  [:isAsync=true;format="depth32float";depthCompare="greater"]

  [:isAsync=true;format="depth32float";depthCompare="greater-equal"]

  [:isAsync=true;format="depth32float";depthCompare="less"]

  [:isAsync=true;format="depth32float";depthCompare="less-equal"]

  [:isAsync=true;format="depth32float";depthCompare="never"]

  [:isAsync=true;format="depth32float";depthCompare="not-equal"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="always"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="equal"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="greater"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="greater-equal"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="less"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="less-equal"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="never"]

  [:isAsync=true;format="depth32float-stencil8";depthCompare="not-equal"]

  [:isAsync=true;format="stencil8";depthCompare="always"]

  [:isAsync=true;format="stencil8";depthCompare="equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="greater"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="less"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="never"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="not-equal"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depth_write,frag_depth:*]
  implementation-status: backlog
  [:isAsync=false;format="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm"]

  [:isAsync=false;format="depth24plus"]

  [:isAsync=false;format="depth24plus-stencil8"]

  [:isAsync=false;format="depth32float"]

  [:isAsync=false;format="depth32float-stencil8"]

  [:isAsync=false;format="stencil8"]

  [:isAsync=true;format="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm"]

  [:isAsync=true;format="depth24plus"]

  [:isAsync=true;format="depth24plus-stencil8"]

  [:isAsync=true;format="depth32float"]

  [:isAsync=true;format="depth32float-stencil8"]

  [:isAsync=true;format="stencil8"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depth_write:*]
  implementation-status: backlog
  [:isAsync=false;format="depth16unorm";depthWriteEnabled=false]

  [:isAsync=false;format="depth16unorm";depthWriteEnabled=true]

  [:isAsync=false;format="depth24plus";depthWriteEnabled=false]

  [:isAsync=false;format="depth24plus";depthWriteEnabled=true]

  [:isAsync=false;format="depth24plus-stencil8";depthWriteEnabled=false]

  [:isAsync=false;format="depth24plus-stencil8";depthWriteEnabled=true]

  [:isAsync=false;format="depth32float";depthWriteEnabled=false]

  [:isAsync=false;format="depth32float";depthWriteEnabled=true]

  [:isAsync=false;format="depth32float-stencil8";depthWriteEnabled=false]

  [:isAsync=false;format="depth32float-stencil8";depthWriteEnabled=true]

  [:isAsync=false;format="stencil8";depthWriteEnabled=false]

  [:isAsync=false;format="stencil8";depthWriteEnabled=true]

  [:isAsync=true;format="depth16unorm";depthWriteEnabled=false]

  [:isAsync=true;format="depth16unorm";depthWriteEnabled=true]

  [:isAsync=true;format="depth24plus";depthWriteEnabled=false]

  [:isAsync=true;format="depth24plus";depthWriteEnabled=true]

  [:isAsync=true;format="depth24plus-stencil8";depthWriteEnabled=false]

  [:isAsync=true;format="depth24plus-stencil8";depthWriteEnabled=true]

  [:isAsync=true;format="depth32float";depthWriteEnabled=false]

  [:isAsync=true;format="depth32float";depthWriteEnabled=true]

  [:isAsync=true;format="depth32float-stencil8";depthWriteEnabled=false]

  [:isAsync=true;format="depth32float-stencil8";depthWriteEnabled=true]

  [:isAsync=true;format="stencil8";depthWriteEnabled=false]

  [:isAsync=true;format="stencil8";depthWriteEnabled=true]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:format:*]
  implementation-status: backlog
  [:isAsync=false;format="astc-10x10-unorm"]

  [:isAsync=false;format="astc-10x10-unorm-srgb"]

  [:isAsync=false;format="astc-10x5-unorm"]

  [:isAsync=false;format="astc-10x5-unorm-srgb"]

  [:isAsync=false;format="astc-10x6-unorm"]

  [:isAsync=false;format="astc-10x6-unorm-srgb"]

  [:isAsync=false;format="astc-10x8-unorm"]

  [:isAsync=false;format="astc-10x8-unorm-srgb"]

  [:isAsync=false;format="astc-12x10-unorm"]

  [:isAsync=false;format="astc-12x10-unorm-srgb"]

  [:isAsync=false;format="astc-12x12-unorm"]

  [:isAsync=false;format="astc-12x12-unorm-srgb"]

  [:isAsync=false;format="astc-4x4-unorm"]

  [:isAsync=false;format="astc-4x4-unorm-srgb"]

  [:isAsync=false;format="astc-5x4-unorm"]

  [:isAsync=false;format="astc-5x4-unorm-srgb"]

  [:isAsync=false;format="astc-5x5-unorm"]

  [:isAsync=false;format="astc-5x5-unorm-srgb"]

  [:isAsync=false;format="astc-6x5-unorm"]

  [:isAsync=false;format="astc-6x5-unorm-srgb"]

  [:isAsync=false;format="astc-6x6-unorm"]

  [:isAsync=false;format="astc-6x6-unorm-srgb"]

  [:isAsync=false;format="astc-8x5-unorm"]

  [:isAsync=false;format="astc-8x5-unorm-srgb"]

  [:isAsync=false;format="astc-8x6-unorm"]

  [:isAsync=false;format="astc-8x6-unorm-srgb"]

  [:isAsync=false;format="astc-8x8-unorm"]

  [:isAsync=false;format="astc-8x8-unorm-srgb"]

  [:isAsync=false;format="bc1-rgba-unorm"]

  [:isAsync=false;format="bc1-rgba-unorm-srgb"]

  [:isAsync=false;format="bc2-rgba-unorm"]

  [:isAsync=false;format="bc2-rgba-unorm-srgb"]

  [:isAsync=false;format="bc3-rgba-unorm"]

  [:isAsync=false;format="bc3-rgba-unorm-srgb"]

  [:isAsync=false;format="bc4-r-snorm"]

  [:isAsync=false;format="bc4-r-unorm"]

  [:isAsync=false;format="bc5-rg-snorm"]

  [:isAsync=false;format="bc5-rg-unorm"]

  [:isAsync=false;format="bc6h-rgb-float"]

  [:isAsync=false;format="bc6h-rgb-ufloat"]

  [:isAsync=false;format="bc7-rgba-unorm"]

  [:isAsync=false;format="bc7-rgba-unorm-srgb"]

  [:isAsync=false;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm"]

  [:isAsync=false;format="depth24plus"]

  [:isAsync=false;format="depth24plus-stencil8"]

  [:isAsync=false;format="depth32float"]

  [:isAsync=false;format="depth32float-stencil8"]

  [:isAsync=false;format="eac-r11snorm"]

  [:isAsync=false;format="eac-r11unorm"]

  [:isAsync=false;format="eac-rg11snorm"]

  [:isAsync=false;format="eac-rg11unorm"]

  [:isAsync=false;format="etc2-rgb8a1unorm"]

  [:isAsync=false;format="etc2-rgb8a1unorm-srgb"]

  [:isAsync=false;format="etc2-rgb8unorm"]

  [:isAsync=false;format="etc2-rgb8unorm-srgb"]

  [:isAsync=false;format="etc2-rgba8unorm"]

  [:isAsync=false;format="etc2-rgba8unorm-srgb"]

  [:isAsync=false;format="r16float"]
    expected: FAIL

  [:isAsync=false;format="r16sint"]
    expected: FAIL

  [:isAsync=false;format="r16uint"]
    expected: FAIL

  [:isAsync=false;format="r32float"]
    expected: FAIL

  [:isAsync=false;format="r32sint"]
    expected: FAIL

  [:isAsync=false;format="r32uint"]
    expected: FAIL

  [:isAsync=false;format="r8sint"]
    expected: FAIL

  [:isAsync=false;format="r8snorm"]

  [:isAsync=false;format="r8uint"]
    expected: FAIL

  [:isAsync=false;format="r8unorm"]
    expected: FAIL

  [:isAsync=false;format="rg11b10ufloat"]

  [:isAsync=false;format="rg16float"]
    expected: FAIL

  [:isAsync=false;format="rg16sint"]
    expected: FAIL

  [:isAsync=false;format="rg16uint"]
    expected: FAIL

  [:isAsync=false;format="rg32float"]
    expected: FAIL

  [:isAsync=false;format="rg32sint"]
    expected: FAIL

  [:isAsync=false;format="rg32uint"]
    expected: FAIL

  [:isAsync=false;format="rg8sint"]
    expected: FAIL

  [:isAsync=false;format="rg8snorm"]

  [:isAsync=false;format="rg8uint"]
    expected: FAIL

  [:isAsync=false;format="rg8unorm"]
    expected: FAIL

  [:isAsync=false;format="rgb10a2uint"]
    expected: FAIL

  [:isAsync=false;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=false;format="rgb9e5ufloat"]

  [:isAsync=false;format="rgba16float"]
    expected: FAIL

  [:isAsync=false;format="rgba16sint"]
    expected: FAIL

  [:isAsync=false;format="rgba16uint"]
    expected: FAIL

  [:isAsync=false;format="rgba32float"]
    expected: FAIL

  [:isAsync=false;format="rgba32sint"]
    expected: FAIL

  [:isAsync=false;format="rgba32uint"]
    expected: FAIL

  [:isAsync=false;format="rgba8sint"]
    expected: FAIL

  [:isAsync=false;format="rgba8snorm"]

  [:isAsync=false;format="rgba8uint"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="stencil8"]

  [:isAsync=true;format="astc-10x10-unorm"]

  [:isAsync=true;format="astc-10x10-unorm-srgb"]

  [:isAsync=true;format="astc-10x5-unorm"]

  [:isAsync=true;format="astc-10x5-unorm-srgb"]

  [:isAsync=true;format="astc-10x6-unorm"]

  [:isAsync=true;format="astc-10x6-unorm-srgb"]

  [:isAsync=true;format="astc-10x8-unorm"]

  [:isAsync=true;format="astc-10x8-unorm-srgb"]

  [:isAsync=true;format="astc-12x10-unorm"]

  [:isAsync=true;format="astc-12x10-unorm-srgb"]

  [:isAsync=true;format="astc-12x12-unorm"]

  [:isAsync=true;format="astc-12x12-unorm-srgb"]

  [:isAsync=true;format="astc-4x4-unorm"]

  [:isAsync=true;format="astc-4x4-unorm-srgb"]

  [:isAsync=true;format="astc-5x4-unorm"]

  [:isAsync=true;format="astc-5x4-unorm-srgb"]

  [:isAsync=true;format="astc-5x5-unorm"]

  [:isAsync=true;format="astc-5x5-unorm-srgb"]

  [:isAsync=true;format="astc-6x5-unorm"]

  [:isAsync=true;format="astc-6x5-unorm-srgb"]

  [:isAsync=true;format="astc-6x6-unorm"]

  [:isAsync=true;format="astc-6x6-unorm-srgb"]

  [:isAsync=true;format="astc-8x5-unorm"]

  [:isAsync=true;format="astc-8x5-unorm-srgb"]

  [:isAsync=true;format="astc-8x6-unorm"]

  [:isAsync=true;format="astc-8x6-unorm-srgb"]

  [:isAsync=true;format="astc-8x8-unorm"]

  [:isAsync=true;format="astc-8x8-unorm-srgb"]

  [:isAsync=true;format="bc1-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc1-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc2-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc2-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc3-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc3-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc4-r-snorm"]
    expected: FAIL

  [:isAsync=true;format="bc4-r-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc5-rg-snorm"]
    expected: FAIL

  [:isAsync=true;format="bc5-rg-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc6h-rgb-float"]
    expected: FAIL

  [:isAsync=true;format="bc6h-rgb-ufloat"]
    expected: FAIL

  [:isAsync=true;format="bc7-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc7-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm"]

  [:isAsync=true;format="depth24plus"]

  [:isAsync=true;format="depth24plus-stencil8"]

  [:isAsync=true;format="depth32float"]

  [:isAsync=true;format="depth32float-stencil8"]

  [:isAsync=true;format="eac-r11snorm"]

  [:isAsync=true;format="eac-r11unorm"]

  [:isAsync=true;format="eac-rg11snorm"]

  [:isAsync=true;format="eac-rg11unorm"]

  [:isAsync=true;format="etc2-rgb8a1unorm"]

  [:isAsync=true;format="etc2-rgb8a1unorm-srgb"]

  [:isAsync=true;format="etc2-rgb8unorm"]

  [:isAsync=true;format="etc2-rgb8unorm-srgb"]

  [:isAsync=true;format="etc2-rgba8unorm"]

  [:isAsync=true;format="etc2-rgba8unorm-srgb"]

  [:isAsync=true;format="r16float"]
    expected: FAIL

  [:isAsync=true;format="r16sint"]
    expected: FAIL

  [:isAsync=true;format="r16uint"]
    expected: FAIL

  [:isAsync=true;format="r32float"]
    expected: FAIL

  [:isAsync=true;format="r32sint"]
    expected: FAIL

  [:isAsync=true;format="r32uint"]
    expected: FAIL

  [:isAsync=true;format="r8sint"]
    expected: FAIL

  [:isAsync=true;format="r8snorm"]
    expected: FAIL

  [:isAsync=true;format="r8uint"]
    expected: FAIL

  [:isAsync=true;format="r8unorm"]
    expected: FAIL

  [:isAsync=true;format="rg11b10ufloat"]
    expected: FAIL

  [:isAsync=true;format="rg16float"]
    expected: FAIL

  [:isAsync=true;format="rg16sint"]
    expected: FAIL

  [:isAsync=true;format="rg16uint"]
    expected: FAIL

  [:isAsync=true;format="rg32float"]
    expected: FAIL

  [:isAsync=true;format="rg32sint"]
    expected: FAIL

  [:isAsync=true;format="rg32uint"]
    expected: FAIL

  [:isAsync=true;format="rg8sint"]
    expected: FAIL

  [:isAsync=true;format="rg8snorm"]
    expected: FAIL

  [:isAsync=true;format="rg8uint"]
    expected: FAIL

  [:isAsync=true;format="rg8unorm"]
    expected: FAIL

  [:isAsync=true;format="rgb10a2uint"]
    expected: FAIL

  [:isAsync=true;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=true;format="rgb9e5ufloat"]
    expected: FAIL

  [:isAsync=true;format="rgba16float"]
    expected: FAIL

  [:isAsync=true;format="rgba16sint"]
    expected: FAIL

  [:isAsync=true;format="rgba16uint"]
    expected: FAIL

  [:isAsync=true;format="rgba32float"]
    expected: FAIL

  [:isAsync=true;format="rgba32sint"]
    expected: FAIL

  [:isAsync=true;format="rgba32uint"]
    expected: FAIL

  [:isAsync=true;format="rgba8sint"]
    expected: FAIL

  [:isAsync=true;format="rgba8snorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8uint"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="stencil8"]


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:stencil_test:*]
  implementation-status: backlog
  [:isAsync=false;format="depth16unorm";face="back";compare="_undef_"]

  [:isAsync=false;format="depth16unorm";face="back";compare="always"]

  [:isAsync=false;format="depth16unorm";face="back";compare="equal"]

  [:isAsync=false;format="depth16unorm";face="back";compare="greater"]

  [:isAsync=false;format="depth16unorm";face="back";compare="greater-equal"]

  [:isAsync=false;format="depth16unorm";face="back";compare="less"]

  [:isAsync=false;format="depth16unorm";face="back";compare="less-equal"]

  [:isAsync=false;format="depth16unorm";face="back";compare="never"]

  [:isAsync=false;format="depth16unorm";face="back";compare="not-equal"]

  [:isAsync=false;format="depth16unorm";face="front";compare="_undef_"]

  [:isAsync=false;format="depth16unorm";face="front";compare="always"]

  [:isAsync=false;format="depth16unorm";face="front";compare="equal"]

  [:isAsync=false;format="depth16unorm";face="front";compare="greater"]

  [:isAsync=false;format="depth16unorm";face="front";compare="greater-equal"]

  [:isAsync=false;format="depth16unorm";face="front";compare="less"]

  [:isAsync=false;format="depth16unorm";face="front";compare="less-equal"]

  [:isAsync=false;format="depth16unorm";face="front";compare="never"]

  [:isAsync=false;format="depth16unorm";face="front";compare="not-equal"]

  [:isAsync=false;format="depth24plus";face="back";compare="_undef_"]

  [:isAsync=false;format="depth24plus";face="back";compare="always"]

  [:isAsync=false;format="depth24plus";face="back";compare="equal"]

  [:isAsync=false;format="depth24plus";face="back";compare="greater"]

  [:isAsync=false;format="depth24plus";face="back";compare="greater-equal"]

  [:isAsync=false;format="depth24plus";face="back";compare="less"]

  [:isAsync=false;format="depth24plus";face="back";compare="less-equal"]

  [:isAsync=false;format="depth24plus";face="back";compare="never"]

  [:isAsync=false;format="depth24plus";face="back";compare="not-equal"]

  [:isAsync=false;format="depth24plus";face="front";compare="_undef_"]

  [:isAsync=false;format="depth24plus";face="front";compare="always"]

  [:isAsync=false;format="depth24plus";face="front";compare="equal"]

  [:isAsync=false;format="depth24plus";face="front";compare="greater"]

  [:isAsync=false;format="depth24plus";face="front";compare="greater-equal"]

  [:isAsync=false;format="depth24plus";face="front";compare="less"]

  [:isAsync=false;format="depth24plus";face="front";compare="less-equal"]

  [:isAsync=false;format="depth24plus";face="front";compare="never"]

  [:isAsync=false;format="depth24plus";face="front";compare="not-equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="always"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="greater"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="greater-equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="less"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="less-equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="never"]

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="not-equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="always"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="greater"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="greater-equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="less"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="less-equal"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="never"]

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="not-equal"]

  [:isAsync=false;format="depth32float";face="back";compare="_undef_"]

  [:isAsync=false;format="depth32float";face="back";compare="always"]

  [:isAsync=false;format="depth32float";face="back";compare="equal"]

  [:isAsync=false;format="depth32float";face="back";compare="greater"]

  [:isAsync=false;format="depth32float";face="back";compare="greater-equal"]

  [:isAsync=false;format="depth32float";face="back";compare="less"]

  [:isAsync=false;format="depth32float";face="back";compare="less-equal"]

  [:isAsync=false;format="depth32float";face="back";compare="never"]

  [:isAsync=false;format="depth32float";face="back";compare="not-equal"]

  [:isAsync=false;format="depth32float";face="front";compare="_undef_"]

  [:isAsync=false;format="depth32float";face="front";compare="always"]

  [:isAsync=false;format="depth32float";face="front";compare="equal"]

  [:isAsync=false;format="depth32float";face="front";compare="greater"]

  [:isAsync=false;format="depth32float";face="front";compare="greater-equal"]

  [:isAsync=false;format="depth32float";face="front";compare="less"]

  [:isAsync=false;format="depth32float";face="front";compare="less-equal"]

  [:isAsync=false;format="depth32float";face="front";compare="never"]

  [:isAsync=false;format="depth32float";face="front";compare="not-equal"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="always"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="equal"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="greater"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="greater-equal"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="less"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="less-equal"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="never"]

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="not-equal"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="always"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="equal"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="greater"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="greater-equal"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="less"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="less-equal"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="never"]

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="not-equal"]

  [:isAsync=false;format="stencil8";face="back";compare="_undef_"]

  [:isAsync=false;format="stencil8";face="back";compare="always"]

  [:isAsync=false;format="stencil8";face="back";compare="equal"]

  [:isAsync=false;format="stencil8";face="back";compare="greater"]

  [:isAsync=false;format="stencil8";face="back";compare="greater-equal"]

  [:isAsync=false;format="stencil8";face="back";compare="less"]

  [:isAsync=false;format="stencil8";face="back";compare="less-equal"]

  [:isAsync=false;format="stencil8";face="back";compare="never"]

  [:isAsync=false;format="stencil8";face="back";compare="not-equal"]

  [:isAsync=false;format="stencil8";face="front";compare="_undef_"]

  [:isAsync=false;format="stencil8";face="front";compare="always"]

  [:isAsync=false;format="stencil8";face="front";compare="equal"]

  [:isAsync=false;format="stencil8";face="front";compare="greater"]

  [:isAsync=false;format="stencil8";face="front";compare="greater-equal"]

  [:isAsync=false;format="stencil8";face="front";compare="less"]

  [:isAsync=false;format="stencil8";face="front";compare="less-equal"]

  [:isAsync=false;format="stencil8";face="front";compare="never"]

  [:isAsync=false;format="stencil8";face="front";compare="not-equal"]

  [:isAsync=true;format="depth16unorm";face="back";compare="_undef_"]

  [:isAsync=true;format="depth16unorm";face="back";compare="always"]

  [:isAsync=true;format="depth16unorm";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="_undef_"]

  [:isAsync=true;format="depth16unorm";face="front";compare="always"]

  [:isAsync=true;format="depth16unorm";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="_undef_"]

  [:isAsync=true;format="depth24plus";face="back";compare="always"]

  [:isAsync=true;format="depth24plus";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="_undef_"]

  [:isAsync=true;format="depth24plus";face="front";compare="always"]

  [:isAsync=true;format="depth24plus";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="always"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="greater"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="greater-equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="less"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="less-equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="never"]

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="not-equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="always"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="greater"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="greater-equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="less"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="less-equal"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="never"]

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="not-equal"]

  [:isAsync=true;format="depth32float";face="back";compare="_undef_"]

  [:isAsync=true;format="depth32float";face="back";compare="always"]

  [:isAsync=true;format="depth32float";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="_undef_"]

  [:isAsync=true;format="depth32float";face="front";compare="always"]

  [:isAsync=true;format="depth32float";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="always"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="equal"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="greater"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="greater-equal"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="less"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="less-equal"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="never"]

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="not-equal"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="always"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="equal"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="greater"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="greater-equal"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="less"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="less-equal"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="never"]

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="not-equal"]

  [:isAsync=true;format="stencil8";face="back";compare="_undef_"]

  [:isAsync=true;format="stencil8";face="back";compare="always"]

  [:isAsync=true;format="stencil8";face="back";compare="equal"]

  [:isAsync=true;format="stencil8";face="back";compare="greater"]

  [:isAsync=true;format="stencil8";face="back";compare="greater-equal"]

  [:isAsync=true;format="stencil8";face="back";compare="less"]

  [:isAsync=true;format="stencil8";face="back";compare="less-equal"]

  [:isAsync=true;format="stencil8";face="back";compare="never"]

  [:isAsync=true;format="stencil8";face="back";compare="not-equal"]

  [:isAsync=true;format="stencil8";face="front";compare="_undef_"]

  [:isAsync=true;format="stencil8";face="front";compare="always"]

  [:isAsync=true;format="stencil8";face="front";compare="equal"]

  [:isAsync=true;format="stencil8";face="front";compare="greater"]

  [:isAsync=true;format="stencil8";face="front";compare="greater-equal"]

  [:isAsync=true;format="stencil8";face="front";compare="less"]

  [:isAsync=true;format="stencil8";face="front";compare="less-equal"]

  [:isAsync=true;format="stencil8";face="front";compare="never"]

  [:isAsync=true;format="stencil8";face="front";compare="not-equal"]


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:stencil_write:*]
  implementation-status: backlog
  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="zero"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="invert"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="keep"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="replace"]

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="zero"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="_undef_"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="increment-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="increment-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="invert"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="keep"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="replace"]

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="zero"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="_undef_"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="increment-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="increment-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="invert"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="keep"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="replace"]

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="zero"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="invert"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="keep"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="replace"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="zero"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="_undef_"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="invert"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="keep"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="replace"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="zero"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="_undef_"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="invert"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="keep"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="replace"]

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="zero"]
