[cts.https.html?q=webgpu:api,operation,buffers,map:mapAsync,mapState:*]
  implementation-status: backlog
  expected:
    if os == "linux": [OK, TIMEOUT]
    if os == "mac": TIMEOUT
  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="invalid";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=false]

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=true]

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=false]

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=true]

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=false]

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=true]

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=false]

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=true]

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected: FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:usageType="read";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="READ";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=false;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=false;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:usageType="write";mapModeType="WRITE";beforeUnmap=true;beforeDestroy=true;afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:api,operation,buffers,map:mapAsync,read,typedArrayAccess:*]
  implementation-status: backlog
  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="default-expand"]
    expected: FAIL

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="explicit-expand"]
    expected: FAIL

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="minimal"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="default-expand"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="explicit-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="minimal"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux": [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="default-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux": [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="explicit-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux": [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="minimal"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:api,operation,buffers,map:mapAsync,read:*]
  implementation-status: backlog
  expected:
    if os == "linux": [OK, TIMEOUT]
  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="default-expand"]
    expected: FAIL

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="explicit-expand"]
    expected: FAIL

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="minimal"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "win" and not debug: FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="default-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux": [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="explicit-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux": [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="minimal"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="default-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="explicit-expand"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="minimal"]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:api,operation,buffers,map:mapAsync,write,unchanged_ranges_preserved:*]
  [:]


[cts.https.html?q=webgpu:api,operation,buffers,map:mapAsync,write:*]
  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="default-expand"]

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="explicit-expand"]

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="minimal"]

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="default-expand"]

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="explicit-expand"]

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="minimal"]

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="default-expand"]

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="explicit-expand"]

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="minimal"]


[cts.https.html?q=webgpu:api,operation,buffers,map:mappedAtCreation,mapState:*]
  implementation-status: backlog
  [:usageType="invalid";afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="invalid";afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:usageType="invalid";afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:usageType="invalid";afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "win" and not debug: FAIL
      if os == "linux": FAIL
      if os == "mac": FAIL

  [:usageType="read";afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="read";afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="read";afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="read";afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="write";afterUnmap=false;afterDestroy=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="write";afterUnmap=false;afterDestroy=true]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="write";afterUnmap=true;afterDestroy=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:usageType="write";afterUnmap=true;afterDestroy=true]
    expected:
      if os == "win" and debug: [PASS, FAIL]


[cts.https.html?q=webgpu:api,operation,buffers,map:mappedAtCreation:*]
  [:mappable=false]

  [:mappable=true]


[cts.https.html?q=webgpu:api,operation,buffers,map:remapped_for_write:*]
  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="default-expand"]

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="explicit-expand"]

  [:mapAsyncRegionLeft="default-expand";mapAsyncRegionRight="minimal"]

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="default-expand"]

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="explicit-expand"]

  [:mapAsyncRegionLeft="explicit-expand";mapAsyncRegionRight="minimal"]

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="default-expand"]

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="explicit-expand"]

  [:mapAsyncRegionLeft="minimal";mapAsyncRegionRight="minimal"]
