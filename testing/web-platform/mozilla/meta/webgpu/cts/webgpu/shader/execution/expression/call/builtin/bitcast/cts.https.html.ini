[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:af_to_f32:*]
  implementation-status: backlog
  [:inputSource="const";vectorize="_undef_"]

  [:inputSource="const";vectorize=2]
    expected: FAIL

  [:inputSource="const";vectorize=3]
    expected: FAIL

  [:inputSource="const";vectorize=4]
    expected: FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:af_to_i32:*]
  implementation-status: backlog
  [:inputSource="const";vectorize="_undef_"]
    expected:
      if os == "win": FAIL

  [:inputSource="const";vectorize=2]
    expected: FAIL

  [:inputSource="const";vectorize=3]
    expected: FAIL

  [:inputSource="const";vectorize=4]
    expected: FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:af_to_u32:*]
  implementation-status: backlog
  [:inputSource="const";vectorize="_undef_"]
    expected:
      if os == "win": FAIL

  [:inputSource="const";vectorize=2]
    expected: FAIL

  [:inputSource="const";vectorize=3]
    expected: FAIL

  [:inputSource="const";vectorize=4]
    expected: FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:af_to_vec2f16:*]
  implementation-status: backlog
  [:inputSource="const"]
    expected:
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:ai_to_f32:*]
  implementation-status: backlog
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected: FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected: FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected: FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:ai_to_i32:*]
  implementation-status: backlog
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected: FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected: FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected: FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:ai_to_u32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected: FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected: FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected: FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected: FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:ai_to_vec2h:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:f16_to_f16:*]
  implementation-status: backlog
  expected:
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:f32_to_f32:*]
  implementation-status: backlog
  expected:
    if debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:f32_to_i32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:f32_to_u32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:f32_to_vec2h:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:i32_to_f32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:i32_to_i32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:i32_to_u32:*]
  implementation-status: backlog
  expected:
    if debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:i32_to_vec2h:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:u32_to_f32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:u32_to_i32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:u32_to_u32:*]
  implementation-status: backlog
  expected:
    if os == "linux" and debug: [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";vectorize="_undef_";alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize="_undef_";alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: FAIL
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=2;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=3;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";vectorize=4;alias=true]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_r";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="storage_rw";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize="_undef_";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize="_undef_";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": FAIL

  [:inputSource="uniform";vectorize=2;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=2;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=3;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:inputSource="uniform";vectorize=4;alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, FAIL]

  [:inputSource="uniform";vectorize=4;alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:u32_to_vec2h:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2af_to_vec4f16:*]
  implementation-status: backlog
  [:inputSource="const"]
    expected:
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2ai_to_vec4h:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2f_to_vec4h:*]
  implementation-status: backlog
  expected:
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2h_to_f32:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2h_to_i32:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2h_to_u32:*]
  implementation-status: backlog
  expected:
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2i_to_vec4h:*]
  implementation-status: backlog
  expected:
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec2u_to_vec4h:*]
  implementation-status: backlog
  expected:
    if os == "mac" and debug: [OK, TIMEOUT]
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec4h_to_vec2f:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec4h_to_vec2i:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,execution,expression,call,builtin,bitcast:vec4h_to_vec2u:*]
  implementation-status: backlog
  [:inputSource="const";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="const";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_r";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="storage_rw";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=false]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL

  [:inputSource="uniform";alias=true]
    expected:
      if os == "win": [PASS, FAIL]
      if os == "mac": FAIL
