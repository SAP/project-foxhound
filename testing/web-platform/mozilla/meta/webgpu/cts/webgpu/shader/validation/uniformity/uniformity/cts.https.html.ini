[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:basics:*]
  expected:
    if os == "win" and not debug: TIMEOUT
    if os == "linux" and not debug: TIMEOUT
    if os == "mac": TIMEOUT
  [:op="dpdx";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdx";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdx";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:op="dpdxCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdxFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdy";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="dpdyFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidth";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthCoarse";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="fwidthFine";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="storageBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="textureSample";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSample";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSample";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleBias";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="textureSampleCompare";stage="fragment";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: TIMEOUT
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupBarrier";stage="compute";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_and2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_builtin";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_builtin";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_builtin";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_builtin";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_func_var";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_func_var";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_func_var";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_func_var";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_let";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_let";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_let";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_let";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or1";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or1";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or1";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or1";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or2";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or2";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or2";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_or2";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_ro";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="nonuniform_storage_rw";expectation=false;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_and";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_and";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_and";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_and";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_const";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_const";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_const";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_const";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_func_var";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_func_var";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_func_var";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_func_var";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_let";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_let";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_let";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_let";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_literal";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_literal";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_literal";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_literal";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_or";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_or";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_or";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_or";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_override";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_override";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_override";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_override";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_storage_ro";expectation=true;statement="for"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_storage_ro";expectation=true;statement="if"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_storage_ro";expectation=true;statement="switch"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:op="workgroupUniformLoad";stage="compute";cond="uniform_storage_ro";expectation=true;statement="while"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:binary_expressions:*]
  expected:
    if os == "win" and not debug: TIMEOUT
    if os == "linux" and not debug: TIMEOUT
    if os == "mac": TIMEOUT
  [:e1="literal";e2="literal";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="literal";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_index";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="literal";e2="uniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="literal";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform_index";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform_index";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform_index";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform_index";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform_index";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_index";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="nonuniform";e2="uniform_index";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: [FAIL, TIMEOUT, NOTRUN]

  [:e1="nonuniform";e2="uniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform";e2="uniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="literal";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_index";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index1";e2="uniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="literal";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_index";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_index2";e2="uniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="literal";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: TIMEOUT
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_index";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="nonuniform_struct";e2="uniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac": NOTRUN

  [:e1="uniform";e2="literal";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="literal";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_index";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform";e2="uniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e1="uniform_index";e2="literal";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="literal";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_index";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="equal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="greater"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="less"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="minus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="plus"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="rem"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="times"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_index";e2="uniform_struct";op="xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="literal";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index1";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_index2";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="nonuniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_index";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="and"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="div"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="equal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="greater"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="greaterequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="less"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="lessequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="minus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="notequal"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="or"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="plus"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="rem"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="shl"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="shr"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="times"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN

  [:e1="uniform_struct";e2="uniform_struct";op="xor"]
    expected:
      if os == "win" and debug: FAIL
      if os == "win" and not debug: NOTRUN
      if os == "linux" and not debug: NOTRUN
      if os == "mac" and debug: FAIL
      if os == "mac" and not debug: NOTRUN


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:compute_builtin_values:*]
  [:builtin="global_invocation_id";type="vec3%3Cu32%3E";uniform=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:builtin="local_invocation_id";type="vec3%3Cf32%3E";uniform=false]
    expected:
      if os == "win" and debug: FAIL

  [:builtin="local_invocation_index";type="u32";uniform=false]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:builtin="num_workgroups";type="vec3%3Cu32%3E";uniform=true]

  [:builtin="workgroup_id";type="vec3%3Cu32%3E";uniform=true]


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:fragment_builtin_values:*]
  [:builtin="front_facing";type="bool"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:builtin="position";type="vec4%3Cf32%3E"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:builtin="sample_index";type="u32"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:builtin="sample_mask";type="u32"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:function_pointer_parameters:*]
  [:case="nonuniform_conditional_call_assign_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nonuniform_param_nonuniform_assignment"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nonuniform_param_uniform_assignment"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_codependent1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_codependent2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_codependent3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_codependent4"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_depends_on_nonpointer_param_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_depends_on_nonpointer_param_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_depends_on_pointer_param_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_depends_on_pointer_param_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_nonuniform_passthrough_value"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_store_nonuniform_value"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_store_uniform_value"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="pointer_uniform_passthrough_value"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_failure"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_success"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_conditional_call_assign_nonuniform1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_conditional_call_assign_nonuniform2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_conditional_call_assign_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_param_nonuniform_assignment"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_param_uniform_assignment"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:function_variables:*]
  [:case="after_loop_with_nonuniform_break";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_nonuniform_break";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_nonuniform_break";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_uniform_break_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_uniform_break_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_uniform_break_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_uniform_break_uniform";init="no_init"]

  [:case="after_loop_with_uniform_break_uniform";init="nonuniform"]

  [:case="after_loop_with_uniform_break_uniform";init="uniform"]

  [:case="after_loop_with_uniform_breaks";init="no_init"]

  [:case="after_loop_with_uniform_breaks";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_loop_with_uniform_breaks";init="uniform"]

  [:case="after_switch_all_uniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_all_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_all_uniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_some_assign";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_some_assign";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_some_assign";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_with_break_nonuniform1";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_with_break_nonuniform1";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_with_break_nonuniform1";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_with_break_nonuniform2";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_with_break_nonuniform2";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="after_switch_with_break_nonuniform2";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="compound_assign_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="compound_assign_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="compound_assign_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="compound_assign_uniform";init="no_init"]

  [:case="compound_assign_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="compound_assign_uniform";init="uniform"]

  [:case="for_loop_nonuniform_body";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_body";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_body";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_body_no_condition";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_body_no_condition";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_body_no_condition";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_increment";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_increment";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_increment";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_init";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_init";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_nonuniform_init";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_uniform_body";init="no_init"]

  [:case="for_loop_uniform_body";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_uniform_body";init="uniform"]

  [:case="for_loop_uniform_body_no_condition";init="no_init"]

  [:case="for_loop_uniform_body_no_condition";init="nonuniform"]

  [:case="for_loop_uniform_body_no_condition";init="uniform"]

  [:case="for_loop_uniform_increment";init="no_init"]

  [:case="for_loop_uniform_increment";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="for_loop_uniform_increment";init="uniform"]

  [:case="for_loop_uniform_init";init="no_init"]

  [:case="for_loop_uniform_init";init="nonuniform"]

  [:case="for_loop_uniform_init";init="uniform"]

  [:case="if_else_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_else_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_else_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_else_split";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_else_split";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_else_split";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_else_uniform";init="no_init"]

  [:case="if_else_uniform";init="nonuniform"]

  [:case="if_else_uniform";init="uniform"]

  [:case="if_no_else_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_else_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_else_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_else_uniform";init="no_init"]

  [:case="if_no_else_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_else_uniform";init="uniform"]

  [:case="if_no_then_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_then_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_then_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_then_uniform";init="no_init"]

  [:case="if_no_then_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_no_then_uniform";init="uniform"]

  [:case="if_nonescaping_nonuniform";init="no_init"]

  [:case="if_nonescaping_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_nonescaping_nonuniform";init="uniform"]

  [:case="if_unreachable_else_none";init="no_init"]

  [:case="if_unreachable_else_none";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_else_none";init="uniform"]

  [:case="if_unreachable_else_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_else_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_else_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_else_uniform";init="no_init"]

  [:case="if_unreachable_else_uniform";init="nonuniform"]

  [:case="if_unreachable_else_uniform";init="uniform"]

  [:case="if_unreachable_then_none";init="no_init"]

  [:case="if_unreachable_then_none";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_then_none";init="uniform"]

  [:case="if_unreachable_then_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_then_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_then_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="if_unreachable_then_uniform";init="no_init"]

  [:case="if_unreachable_then_uniform";init="nonuniform"]

  [:case="if_unreachable_then_uniform";init="uniform"]

  [:case="loop_body_depends_on_continuing_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_depends_on_continuing_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_depends_on_continuing_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_depends_on_continuing_uniform";init="no_init"]

  [:case="loop_body_depends_on_continuing_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_depends_on_continuing_uniform";init="uniform"]

  [:case="loop_body_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_nonuniform_cond";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_nonuniform_cond";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_nonuniform_cond";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_body_uniform";init="no_init"]

  [:case="loop_body_uniform";init="nonuniform"]

  [:case="loop_body_uniform";init="uniform"]

  [:case="loop_continuing_from_body_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split1";init="no_init"]

  [:case="loop_continuing_from_body_split1";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split1";init="uniform"]

  [:case="loop_continuing_from_body_split2";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split2";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split2";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split3";init="no_init"]

  [:case="loop_continuing_from_body_split3";init="nonuniform"]

  [:case="loop_continuing_from_body_split3";init="uniform"]

  [:case="loop_continuing_from_body_split4";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split4";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split4";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split5";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split5";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_split5";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_continuing_from_body_uniform";init="no_init"]

  [:case="loop_continuing_from_body_uniform";init="nonuniform"]

  [:case="loop_continuing_from_body_uniform";init="uniform"]

  [:case="loop_in_loop_with_continue_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_in_loop_with_continue_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_in_loop_with_continue_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_in_loop_with_continue_uniform";init="no_init"]

  [:case="loop_in_loop_with_continue_uniform";init="nonuniform"]

  [:case="loop_in_loop_with_continue_uniform";init="uniform"]

  [:case="loop_unreachable_continuing";init="no_init"]

  [:case="loop_unreachable_continuing";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="loop_unreachable_continuing";init="uniform"]

  [:case="nested1";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nested1";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nested1";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nested2";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nested2";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nested2";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="no_assign";init="no_init"]

  [:case="no_assign";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="no_assign";init="uniform"]

  [:case="partial_assignment_all_members_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_all_members_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_all_members_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_all_members_uniform";init="no_init"]

  [:case="partial_assignment_all_members_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_all_members_uniform";init="uniform"]

  [:case="partial_assignment_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_array_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_array_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_array_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_array_uniform";init="no_init"]

  [:case="partial_assignment_single_element_array_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_array_uniform";init="uniform"]

  [:case="partial_assignment_single_element_struct_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_struct_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_struct_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_struct_uniform";init="no_init"]

  [:case="partial_assignment_single_element_struct_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_single_element_struct_uniform";init="uniform"]

  [:case="partial_assignment_uniform";init="no_init"]

  [:case="partial_assignment_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="partial_assignment_uniform";init="uniform"]

  [:case="simple_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="simple_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="simple_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="simple_uniform";init="no_init"]

  [:case="simple_uniform";init="nonuniform"]

  [:case="simple_uniform";init="uniform"]

  [:case="switch_nonuniform_case";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="switch_nonuniform_case";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="switch_nonuniform_case";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="switch_uniform_case";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="switch_uniform_case";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="switch_uniform_case";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="unreachable_nonuniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="unreachable_nonuniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="unreachable_nonuniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="unreachable_uniform";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="unreachable_uniform";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="unreachable_uniform";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="while_loop_nonuniform_body";init="no_init"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="while_loop_nonuniform_body";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="while_loop_nonuniform_body";init="uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="while_loop_uniform_body";init="no_init"]

  [:case="while_loop_uniform_body";init="nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="while_loop_uniform_body";init="uniform"]


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:functions:*]
  [:case="combined_parameters1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="combined_parameters2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="combined_parameters3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="combined_parameters4"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="dpdxCoarse_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="dpdxFine_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="dpdx_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="dpdyCoarse_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="dpdyFine_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="dpdy_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="fwidthCoarse_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="fwidthFine_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="fwidth_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="min_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nonuniform_passthrough_parameter"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="nonuniform_return_is_uniform_after_call"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_function_call_depends_on_nonuniform_param"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_function_call_depends_on_uniform_param"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_function_call_in_nonuniform_cf"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_function_call_in_nonuniform_cf2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="required_uniform_function_call_in_uniform_cf"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureDimensions_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureGatherCompare_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureGather_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureLoad_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureNumLayers_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureNumLevels_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureNumSamples_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSampleBaseClampToEdge_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSampleBias_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSampleCompareLevel_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSampleCompare_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSampleGrad_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSampleLevel_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="textureSample_nonuniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_parameter_cf_after_nonuniform_expr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_passthrough_parameter"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="value_constructor_uniform_input_uniform_result"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:pointers:*]
  [:case="address_nonuniform_chain1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="address_nonuniform_chain2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="address_nonuniform_value"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="address_uniform_chain"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="address_uniform_literal"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="address_uniform_value"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_array_nonuniform_index1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_array_nonuniform_index2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_array_nonuniform_index3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_array_uniform_index"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_alias_nonuniform1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_alias_nonuniform2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_alias_nonuniform3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_alias_nonuniform4"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_alias_nonuniform5"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_alias_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_nonuniform1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_nonuniform2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_uniform1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_uniform2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_scalar_uniform3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_chain_nonuniform1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_chain_nonuniform2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_chain_nonuniform3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_chain_uniform"]

  [:case="contents_struct_nonuniform1"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_nonuniform2"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_nonuniform3"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="contents_struct_uniform"]

  [:case="wg_uniform_load_is_uniform"]


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:short_circuit_expressions:*]
  [:case="and_nonuniform_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="and_nonuniform_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="and_uniform_first_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="and_uniform_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="and_uniform_second_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="and_uniform_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="or_nonuniform_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="or_nonuniform_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="or_uniform_first_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="or_uniform_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="or_uniform_second_nonuniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:case="or_uniform_uniform"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL


[cts.https.html?q=webgpu:shader,validation,uniformity,uniformity:unary_expressions:*]
  [:e="literal";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="literal";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="literal";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_index1";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_index1";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_index1";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_index2";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_index2";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_index2";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_struct";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_struct";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="nonuniform_struct";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform_index";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform_index";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform_index";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform_struct";op="!b_tmp"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform_struct";op="-i32(i_tmp)%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL

  [:e="uniform_struct";op="~i_tmp%20%3E%200"]
    expected:
      if os == "win": FAIL
      if os == "linux" and not debug: FAIL
      if os == "mac": FAIL
