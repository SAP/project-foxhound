[cts.https.html?q=webgpu:shader,validation,shader_io,interpolate:duplicate:*]
  [:attr=""]

  [:attr="%40interpolate(flat)"]


[cts.https.html?q=webgpu:shader,validation,shader_io,interpolate:integral_types:*]
  implementation-status: backlog
  expected: TIMEOUT
  [:stage="fragment";type="i32";use_struct=false;attribute=""]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute=""]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(linear)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(perspective)"]
    expected:
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="i32";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute=""]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute=""]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(linear)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(perspective)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="u32";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute=""]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute=""]
    expected:
      if os == "win": FAIL
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute=""]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute=""]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear,%20center)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear,%20sample)"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective)"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="fragment";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";type="i32";use_struct=false;attribute=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=true;attribute=""]
    expected: FAIL

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(linear)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(linear,%20center)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(linear,%20sample)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(perspective)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(perspective,%20center)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]

  [:stage="vertex";type="i32";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]

  [:stage="vertex";type="u32";use_struct=false;attribute=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=true;attribute=""]
    expected: FAIL

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(linear)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(linear,%20center)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(linear,%20sample)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(perspective)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(perspective,%20center)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]

  [:stage="vertex";type="u32";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute=""]
    expected: FAIL

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear,%20center)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(linear,%20sample)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective,%20center)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]

  [:stage="vertex";type="vec2%3Ci32%3E";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(linear,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective,%20center)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective,%20centroid)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=false;attribute="%40interpolate(perspective,%20sample)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute=""]
    expected: FAIL

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(flat)"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear,%20center)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear,%20centroid)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(linear,%20sample)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective,%20center)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective,%20centroid)"]

  [:stage="vertex";type="vec4%3Cu32%3E";use_struct=true;attribute="%40interpolate(perspective,%20sample)"]


[cts.https.html?q=webgpu:shader,validation,shader_io,interpolate:interpolation_validation:*]
  implementation-status: backlog
  [:attr="comment"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:attr="missing_comma"]

  [:attr="missing_left_paren"]

  [:attr="missing_parens"]

  [:attr="missing_right_paren"]

  [:attr="missing_value_and_left_paren"]

  [:attr="newline"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:attr="no_params"]

  [:attr="no_space"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:attr="numeric"]

  [:attr="numeric_second_param"]

  [:attr="trailing_comma_one_arg"]
    expected: FAIL

  [:attr="trailing_comma_two_arg"]
    expected: FAIL

  [:attr="valid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]


[cts.https.html?q=webgpu:shader,validation,shader_io,interpolate:require_location:*]
  [:stage="fragment";attribute="%40builtin(position)";use_struct=false]

  [:stage="fragment";attribute="%40builtin(position)";use_struct=true]

  [:stage="fragment";attribute="%40location(0)";use_struct=false]

  [:stage="fragment";attribute="%40location(0)";use_struct=true]

  [:stage="vertex";attribute="%40builtin(position)";use_struct=false]

  [:stage="vertex";attribute="%40builtin(position)";use_struct=true]

  [:stage="vertex";attribute="%40location(0)";use_struct=false]

  [:stage="vertex";attribute="%40location(0)";use_struct=true]


[cts.https.html?q=webgpu:shader,validation,shader_io,interpolate:type_and_sampling:*]
  implementation-status: backlog
  expected:
    if os == "win": [OK, TIMEOUT]
    if os == "linux": [OK, TIMEOUT]
    if os == "mac" and debug: [OK, TIMEOUT]
    if os == "mac" and not debug: TIMEOUT
  [:stage="fragment";io="in";use_struct=false;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling=""]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="center";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling=""]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="centroid";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling="center"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling="centroid"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="flat";sampling="sample"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling=""]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=false;type="sample";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling=""]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="center";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling=""]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="centroid";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling="center"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling="centroid"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="flat";sampling="sample"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling=""]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="in";use_struct=true;type="sample";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling="center"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling="centroid"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="";sampling="sample"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling=""]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling="center"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling="centroid"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="center";sampling="sample"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling=""]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling="center"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling="centroid"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="centroid";sampling="sample"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling="center"]
    expected:
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling="centroid"]
    expected:
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="flat";sampling="sample"]
    expected:
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      if os == "linux": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling=""]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling="center"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling="centroid"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=false;type="sample";sampling="sample"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling="center"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling="centroid"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="";sampling="sample"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling=""]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling="center"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling="centroid"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling="flat"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling="linear"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling="perspective"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="center";sampling="sample"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling=""]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling="center"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling="centroid"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling="flat"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling="linear"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling="perspective"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="centroid";sampling="sample"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling="center"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling="centroid"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling="flat"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="flat";sampling="sample"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling="flat"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling="linear"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling="perspective"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling="flat"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling="linear"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling="perspective"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling=""]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling="center"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling="centroid"]
    expected: [PASS, TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling="flat"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling="linear"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling="perspective"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="fragment";io="out";use_struct=true;type="sample";sampling="sample"]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=false;type="";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="center";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="centroid";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="flat";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=false;type="sample";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="in";use_struct=true;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="";sampling="center"]

  [:stage="vertex";io="in";use_struct=true;type="";sampling="centroid"]

  [:stage="vertex";io="in";use_struct=true;type="";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="";sampling="sample"]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling=""]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling="center"]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling="centroid"]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="center";sampling="sample"]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling=""]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling="center"]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling="centroid"]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="centroid";sampling="sample"]

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling="center"]
    expected: FAIL

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling="centroid"]
    expected: FAIL

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="flat";sampling="sample"]
    expected: FAIL

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling=""]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling="center"]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling="centroid"]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling="flat"]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling="linear"]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling="perspective"]

  [:stage="vertex";io="in";use_struct=true;type="sample";sampling="sample"]

  [:stage="vertex";io="out";use_struct=false;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="center";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="centroid";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="flat";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=false;type="sample";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL, TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling="center"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling="centroid"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling="flat"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling="linear"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling="perspective"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="";sampling="sample"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling=""]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling="center"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling="centroid"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling="flat"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling="linear"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling="perspective"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="center";sampling="sample"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling=""]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling="flat"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling="linear"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling="perspective"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="centroid";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling="center"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling="centroid"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling="flat"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling="linear"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling="perspective"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="flat";sampling="sample"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling="flat"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling="linear"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling="perspective"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="linear";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling=""]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling="center"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling="centroid"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling="flat"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling="linear"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling="perspective"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="perspective";sampling="sample"]
    expected:
      if os == "win" and debug: [PASS, FAIL]
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling=""]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling="center"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling="centroid"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling="flat"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling="linear"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling="perspective"]
    expected: [TIMEOUT, NOTRUN]

  [:stage="vertex";io="out";use_struct=true;type="sample";sampling="sample"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]
