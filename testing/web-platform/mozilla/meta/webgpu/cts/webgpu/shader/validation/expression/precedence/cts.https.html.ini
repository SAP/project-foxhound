[cts.https.html?q=webgpu:shader,validation,expression,precedence:binary_requires_parentheses:*]
  implementation-status: backlog
  expected: TIMEOUT
  [:op1="add";op2="add"]

  [:op1="add";op2="bin_and"]
    expected: FAIL

  [:op1="add";op2="bin_or"]
    expected: FAIL

  [:op1="add";op2="bin_xor"]
    expected: FAIL

  [:op1="add";op2="div"]

  [:op1="add";op2="eq"]

  [:op1="add";op2="ge"]

  [:op1="add";op2="gt"]

  [:op1="add";op2="le"]

  [:op1="add";op2="lt"]

  [:op1="add";op2="mod"]

  [:op1="add";op2="mul"]

  [:op1="add";op2="ne"]

  [:op1="add";op2="shl"]
    expected: FAIL

  [:op1="add";op2="shr"]
    expected: FAIL

  [:op1="add";op2="sub"]

  [:op1="bin_and";op2="add"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="bin_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="bin_or"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="bin_xor"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="div"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="mod"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="mul"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="shl"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="shr"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_and";op2="sub"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="add"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="bin_and"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="bin_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="bin_xor"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="div"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="mod"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="mul"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="shl"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="shr"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_or";op2="sub"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="add"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="bin_and"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="bin_or"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="bin_xor"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="div"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="mod"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="mul"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="shl"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="shr"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="bin_xor";op2="sub"]
    expected: [FAIL, TIMEOUT, NOTRUN]

  [:op1="div";op2="add"]

  [:op1="div";op2="bin_and"]
    expected: FAIL

  [:op1="div";op2="bin_or"]
    expected: FAIL

  [:op1="div";op2="bin_xor"]
    expected: FAIL

  [:op1="div";op2="div"]

  [:op1="div";op2="eq"]

  [:op1="div";op2="ge"]

  [:op1="div";op2="gt"]

  [:op1="div";op2="le"]

  [:op1="div";op2="lt"]

  [:op1="div";op2="mod"]

  [:op1="div";op2="mul"]

  [:op1="div";op2="ne"]

  [:op1="div";op2="shl"]
    expected: FAIL

  [:op1="div";op2="shr"]
    expected: FAIL

  [:op1="div";op2="sub"]

  [:op1="eq";op2="add"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="bin_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="bin_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="bin_xor"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="div"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="log_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="log_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="mod"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="mul"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="shl"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="shr"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="eq";op2="sub"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="add"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="bin_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="bin_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="bin_xor"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="div"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="log_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="log_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="mod"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="mul"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="shl"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="shr"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ge";op2="sub"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="gt";op2="add"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="bin_and"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="bin_or"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="bin_xor"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="div"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="eq"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="ge"]
    expected:
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="gt"]
    expected:
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="le"]
    expected:
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="log_and"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="log_or"]
    expected:
      if os == "win" and debug: [TIMEOUT, NOTRUN]
      if os == "win" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="lt"]
    expected:
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="mod"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="mul"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="ne"]
    expected:
      if os == "win" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="shl"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="shr"]
    expected:
      if os == "linux": [TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="gt";op2="sub"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="le";op2="add"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="bin_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="bin_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="bin_xor"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="div"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="log_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="log_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="mod"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="mul"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="shl"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="shr"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="le";op2="sub"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_and";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_and";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_and";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_and";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_and";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_and";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_or";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_or";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_or";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_or";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_or";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="log_or";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="lt";op2="add"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="bin_and"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="bin_or"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="bin_xor"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="div"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="eq"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="le"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="log_and"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="log_or"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="lt"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="mod"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="mul"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="ne"]
    expected:
      if os == "linux" and debug: [TIMEOUT, NOTRUN]
      if os == "linux" and not debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="shl"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="lt";op2="sub"]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="mod";op2="add"]

  [:op1="mod";op2="bin_and"]
    expected: FAIL

  [:op1="mod";op2="bin_or"]
    expected: FAIL

  [:op1="mod";op2="bin_xor"]
    expected: FAIL

  [:op1="mod";op2="div"]

  [:op1="mod";op2="eq"]

  [:op1="mod";op2="ge"]

  [:op1="mod";op2="gt"]

  [:op1="mod";op2="le"]

  [:op1="mod";op2="lt"]

  [:op1="mod";op2="mod"]

  [:op1="mod";op2="mul"]

  [:op1="mod";op2="ne"]

  [:op1="mod";op2="shl"]
    expected: FAIL

  [:op1="mod";op2="shr"]
    expected: FAIL

  [:op1="mod";op2="sub"]

  [:op1="mul";op2="add"]

  [:op1="mul";op2="bin_and"]
    expected: FAIL

  [:op1="mul";op2="bin_or"]
    expected: FAIL

  [:op1="mul";op2="bin_xor"]
    expected: FAIL

  [:op1="mul";op2="div"]

  [:op1="mul";op2="eq"]

  [:op1="mul";op2="ge"]

  [:op1="mul";op2="gt"]

  [:op1="mul";op2="le"]

  [:op1="mul";op2="lt"]

  [:op1="mul";op2="mod"]

  [:op1="mul";op2="mul"]

  [:op1="mul";op2="ne"]

  [:op1="mul";op2="shl"]
    expected: FAIL

  [:op1="mul";op2="shr"]
    expected: FAIL

  [:op1="mul";op2="sub"]

  [:op1="ne";op2="add"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="bin_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="bin_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="bin_xor"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="div"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="eq"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="ge"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="gt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="le"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="log_and"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="log_or"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="lt"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="mod"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="mul"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="ne"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="shl"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="shr"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="ne";op2="sub"]
    expected: [TIMEOUT, NOTRUN]

  [:op1="shl";op2="add"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="bin_and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="bin_or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="bin_xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="div"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="eq"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shl";op2="ge"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shl";op2="gt"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shl";op2="le"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shl";op2="lt"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac" and debug: [TIMEOUT, NOTRUN]
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op1="shl";op2="mod"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="mul"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="ne"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shl";op2="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shl";op2="sub"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="add"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="bin_and"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="bin_or"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="bin_xor"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="div"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="eq"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shr";op2="ge"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shr";op2="gt"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shr";op2="le"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shr";op2="lt"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shr";op2="mod"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="mul"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="ne"]
    expected:
      if os == "linux" and debug: [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [TIMEOUT, NOTRUN]

  [:op1="shr";op2="shl"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="shr"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="shr";op2="sub"]
    expected:
      if os == "win": FAIL
      if os == "linux" and debug: [FAIL, TIMEOUT, NOTRUN]
      if os == "linux" and not debug: FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="sub";op2="add"]

  [:op1="sub";op2="bin_and"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="sub";op2="bin_or"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="sub";op2="bin_xor"]
    expected:
      if os == "win": FAIL
      if os == "linux": FAIL
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]

  [:op1="sub";op2="div"]

  [:op1="sub";op2="eq"]
    expected:
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op1="sub";op2="ge"]
    expected:
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op1="sub";op2="gt"]

  [:op1="sub";op2="le"]

  [:op1="sub";op2="lt"]

  [:op1="sub";op2="mod"]

  [:op1="sub";op2="mul"]

  [:op1="sub";op2="ne"]
    expected:
      if os == "mac" and not debug: [PASS, TIMEOUT, NOTRUN]

  [:op1="sub";op2="shl"]
    expected: FAIL

  [:op1="sub";op2="shr"]
    expected: FAIL

  [:op1="sub";op2="sub"]


[cts.https.html?q=webgpu:shader,validation,expression,precedence:mixed_logical_requires_parentheses:*]
  implementation-status: backlog
  [:op1="log_and";op2="log_and";parens="left"]

  [:op1="log_and";op2="log_and";parens="none"]

  [:op1="log_and";op2="log_and";parens="right"]

  [:op1="log_and";op2="log_or";parens="left"]

  [:op1="log_and";op2="log_or";parens="none"]
    expected: FAIL

  [:op1="log_and";op2="log_or";parens="right"]

  [:op1="log_or";op2="log_and";parens="left"]

  [:op1="log_or";op2="log_and";parens="none"]
    expected: FAIL

  [:op1="log_or";op2="log_and";parens="right"]

  [:op1="log_or";op2="log_or";parens="left"]

  [:op1="log_or";op2="log_or";parens="none"]

  [:op1="log_or";op2="log_or";parens="right"]


[cts.https.html?q=webgpu:shader,validation,expression,precedence:other:*]
  implementation-status: backlog
  [:expr="addr_member"]
    expected: FAIL

  [:expr="and_addr"]

  [:expr="and_addr_paren"]
    expected: FAIL

  [:expr="comp_member"]
    expected: FAIL

  [:expr="deref_idx"]

  [:expr="deref_idx_paren"]
    expected: FAIL

  [:expr="deref_member"]

  [:expr="deref_member_paren"]
    expected: FAIL

  [:expr="log_and_member"]
    expected: FAIL

  [:expr="log_or_member"]
    expected: FAIL

  [:expr="neg_member"]
    expected: FAIL
