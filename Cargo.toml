[workspace]

# These are the "root" crates, which we build and test as top-level targets.
# Their transitive dependencies and dev-dependencies are included automatically
# and do not need to be listed here. Their external dependencies are vendored
# into `third_party/rust` by `mach vendor rust`.
members = [
  "js/rust",
  "js/src",
  "js/src/frontend/smoosh",
  "js/src/rust",
  "js/src/wasm/cranelift",
  "netwerk/test/http3server",
  "security/manager/ssl/osclientcerts",
  "testing/geckodriver",
  "toolkit/components/updateagent",
  "toolkit/crashreporter/rust",
  "toolkit/library/gtest/rust",
  "toolkit/library/rust/",
  "toolkit/mozapps/defaultagent/rust",
]

# Excluded crates may be built as dependencies, but won't be considered members
# of the workspace and their dev-dependencies won't be included.
exclude = [
  # Excluded because it's for a toolchain task
  "build/liblowercase",

  # Exclude third-party code vendored into mozilla-central.
  "servo",
  "third_party/rust",

  # Excluded because these crates have their own Cargo workspaces so they can't
  # be included in the top-level one.
  "gfx/wgpu",
  "gfx/wr",
  "media/audioipc",
  "media/cubeb-rs",

  # Excluded because they are used only as dependencies, not top-level targets,
  # so we don't need to vendor their dev-dependencies.
  "gfx/webrender_bindings",
  "media/mp4parse-rust/mp4parse",
  "media/mp4parse-rust/mp4parse_capi",
  "xpcom/rust/gkrust_utils",
  "tools/lint/test/files/clippy",
  "tools/fuzzing/rust",
]

# Explicitly specify what our profiles use.  The opt-level setting here is
# a total fiction; see the setup of MOZ_RUST_DEFAULT_FLAGS for what the
# opt-level setting will be as a result of various other configure flags.
[profile.dev]
opt-level = 1
rpath = false
lto = false
debug-assertions = true
panic = "abort"

[profile.release]
opt-level = 2
rpath = false
debug-assertions = false
panic = "abort"

[patch.crates-io]
libudev-sys = { path = "dom/webauthn/libudev-sys" }
packed_simd = { git = "https://github.com/hsivonen/packed_simd", rev="0917fe780032a6bbb23d71be545f9c1834128d75" }
rlbox_lucet_sandbox = { git = "https://github.com/PLSysSec/rlbox_lucet_sandbox/", rev="ed8bac8812e9f335d5fadd0f4ece96981aba88a3" }
nix = { git = "https://github.com/shravanrn/nix/", branch = "r0.13.1", rev="4af6c367603869a30fddb5ffb0aba2b9477ba92e" }
spirv_cross = { git = "https://github.com/kvark/spirv_cross", branch = "wgpu4", rev = "e9eff10f964957e7a001c5f712effe17ce09aa99" }
# failure's backtrace feature might break our builds, see bug 1608157.
failure = { git = "https://github.com/badboy/failure", rev = "64af847bc5fdcb6d2438bec8a6030812a80519a5" }
failure_derive = { git = "https://github.com/badboy/failure", rev = "64af847bc5fdcb6d2438bec8a6030812a80519a5" }
# This is a hack. Smallvec 1.4/1.5 cause a big performance regression,
# see bug 1671170.
#
# Fortunately all the consumers build fine with 1.3. We can remove this hack
# once https://github.com/rusqlite/rusqlite/pull/855 and
# https://github.com/Amanieu/parking_lot/pull/266 have been merged.
smallvec = { git = "https://github.com/emilio/rust-smallvec", branch = "1.3-as-1.5", rev = "7579d2fa282282e4d1d96d0c67fc186314a6b6c0" }

[patch.crates-io.cranelift-codegen]
git = "https://github.com/bytecodealliance/wasmtime"
rev = "e22e2c3722f2fbccd3c8d3230119fa04c332c69c"

[patch.crates-io.cranelift-wasm]
git = "https://github.com/bytecodealliance/wasmtime"
rev = "e22e2c3722f2fbccd3c8d3230119fa04c332c69c"
