# HG changeset patch
# User Randell Jesup <rjesup@jesup.org>
# Parent  87841f3bfc9d99a37e31cd43b2e2d03c325af84f
Bug 1315288: Add input checks for VP9 r=rillian

diff --git a/vp9/vp9_cx_iface.c b/vp9/vp9_cx_iface.c
--- a/vp9/vp9_cx_iface.c
+++ b/vp9/vp9_cx_iface.c
@@ -1372,13 +1372,22 @@ static vpx_codec_err_t encoder_encode(vpx_codec_alg_priv_t *ctx,
           timebase_units_to_ticks(timestamp_ratio, pts + duration);
       res = image2yuvconfig(img, &sd);

-      // Store the original flags in to the frame buffer. Will extract the
-      // key frame flag when we actually encode this frame.
-      if (vp9_receive_raw_frame(cpi, flags | ctx->next_frame_flags, &sd,
+      if (sd.y_width != ctx->cfg.g_w || sd.y_height != ctx->cfg.g_h) {
+        /* from vpx_encoder.h for g_w/g_h:
+           "Note that the frames passed as input to the encoder must have this
+           resolution"
+        */
+        ctx->base.err_detail = "Invalid input frame resolution";
+        res = VPX_CODEC_INVALID_PARAM;
+      } else {
+        // Store the original flags in to the frame buffer. Will extract the
+        // key frame flag when we actually encode this frame.
+        if (vp9_receive_raw_frame(cpi, flags | ctx->next_frame_flags, &sd,
                                 dst_time_stamp, dst_end_time_stamp)) {
-        res = update_error_state(ctx, &cpi->common.error);
+          res = update_error_state(ctx, &cpi->common.error);
+        }
+        ctx->next_frame_flags = 0;
       }
-      ctx->next_frame_flags = 0;
     }

     cx_data = ctx->cx_data;
