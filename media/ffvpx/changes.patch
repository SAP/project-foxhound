--- a/libavutil/time.c	2024-02-14 14:57:10.389087159 +0100
+++ b/libavutil/time.c	2024-04-05 14:43:19.097889433 +0200
@@ -28,17 +28,17 @@
 #endif
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 #if HAVE_WINDOWS_H
 #include <windows.h>
 #endif
 
-#include "time.h"
+#include "fftime.h"
 #include "error.h"
 
 int64_t av_gettime(void)
 {
 #if HAVE_GETTIMEOFDAY
     struct timeval tv;
     gettimeofday(&tv, NULL);
     return (int64_t)tv.tv_sec * 1000000 + tv.tv_usec;
--- a/libavutil/parseutils.c	2024-03-26 14:03:12.080640731 +0100
+++ b/libavutil/parseutils.c	2024-04-05 14:44:56.508766832 +0200
@@ -23,20 +23,20 @@
 
 #include <time.h>
 
 #include "avstring.h"
 #include "avutil.h"
 #include "common.h"
 #include "eval.h"
 #include "log.h"
-#include "random_seed.h"
+/* #include "random_seed.h" */
 #include "time_internal.h"
 #include "parseutils.h"
-#include "time.h"
+#include "fftime.h"
 
 #ifdef TEST
 
 #define av_get_random_seed av_get_random_seed_deterministic
 static uint32_t av_get_random_seed_deterministic(void);
 
 #define av_gettime() 1331972053200000
 
@@ -370,17 +370,17 @@
     av_strlcpy(color_string2, color_string + hex_offset,
                FFMIN(slen-hex_offset+1, sizeof(color_string2)));
     if ((tail = strchr(color_string2, ALPHA_SEP)))
         *tail++ = 0;
     len = strlen(color_string2);
     rgba_color[3] = 255;
 
     if (!av_strcasecmp(color_string2, "random") || !av_strcasecmp(color_string2, "bikeshed")) {
-        int rgba = av_get_random_seed();
+        int rgba = 0xffffffff; /* av_get_random_seed(); */
         rgba_color[0] = rgba >> 24;
         rgba_color[1] = rgba >> 16;
         rgba_color[2] = rgba >> 8;
         rgba_color[3] = rgba;
     } else if (hex_offset ||
                strspn(color_string2, "0123456789ABCDEFabcdef") == len) {
         char *tail;
         unsigned int rgba = strtoul(color_string2, &tail, 16);
--- a/libavutil/eval.c	2024-04-05 14:40:56.917791496 +0200
+++ b/libavutil/eval.c	2024-04-05 17:39:45.061516936 +0200
@@ -31,17 +31,17 @@
 #include "avutil.h"
 #include "common.h"
 #include "eval.h"
 #include "ffmath.h"
 #include "log.h"
 #include "mathematics.h"
 #include "mem.h"
 #include "sfc64.h"
-#include "time.h"
+#include "fftime.h"
 #include "avstring.h"
 #include "reverse.h"
 
 typedef struct Parser {
     const AVClass *class;
     int stack_index;
     char *s;
     const double *const_values;
