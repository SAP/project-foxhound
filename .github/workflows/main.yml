# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_one_step:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: firefox-release
      - name: Run Boostrap
        run: ./mach boostrap --application-choice=browser
        
      - name: Checkout Main
        uses: actions/checkout@v3
        with:
          ref: main
          
      - name: Copy configuration
        run: cp taintfox_mozconfig_ubuntu .mozconfig
      - name: Build Foxhound
        run: ./mach build
          
          
  boostrap:
    if: ${{ false }}  # disable for now the job is killed

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: firefox-release
      - name: Run Boostrap
        run: ./mach boostrap --application-choice=browser

      - uses: actions/upload-artifact@v3
        with:
          name: foxhound-mozbuild
          path: ~/.mozbuild

  build_new:
    if: ${{ false }}  # disable for now the job is killed

    runs-on: ubuntu-latest
    needs: boostrap

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Download Mozbuild Dir
        uses: actions/download-artifact@v3
        with:
          name: foxhound-mozbuild
          path: ~/.mozbuild
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ~/.mozbuild

      - name: Copy configuration
        run: cp taintfox_mozconfig_ubuntu .mozconfig
      - name: Build Foxhound
        run: ./mach build


  # This workflow contains a single job called "build"
  build:
    if: ${{ false }}  # disable for now the job is killed
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Update
        run: sudo apt-get update

      # Bootstrap
      - name: Bootstrap Build Environment
        run: ./mach bootstrap --application-choice=browser

      # Configure
      - name: Copy configuration
        run: cp taintfox_mozconfig_ubuntu .mozconfig

      # Build
      - name: Build
        run: ./mach build

      # Package
      - name: Package
        run: ./mach package

  # This workflow contains a single job called "build"
  build_js:
    if: ${{ false }}  # disable for now the job is killed
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Update
        run: sudo apt-get update

      # Bootstrap
      - name: Bootstrap Build Environment
        run: ./mach bootstrap --application-choice=browser

      # Configure
      - name: Copy configuration
        run: cp taintfox_mozconfig_spidermonkey .mozconfig
      # Build
      - name: Build
        run: ./mach build

      # Test
      - name: Test
        run: obj-spider-release/dist/bin/js js/src/Y.js

      - name: Taint Tests
        run: js/src/tests/jstests.py obj-spider-release/dist/bin/js taint/

  # This workflow contains a single job called "build"
  build_docker:
    if: ${{ false }}  # disable for now the job is killed
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # Bootstrap
      - name: Builder Docker
        working-directory: ./dockerfiles
        run: docker build -t foxhound .

