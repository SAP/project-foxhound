<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>

<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
  <script src="chrome://mochikit/content/chrome-harness.js"/>

  <script type="application/javascript"
          src="../common.js" />
  <script type="application/javascript"
          src="../role.js" />
  <script type="application/javascript"
          src="../states.js" />
  <script type="application/javascript"
          src="../promisified-events.js" />
  <script type="application/javascript"
          src="../browser.js"></script>

  <script type="application/javascript">
  <![CDATA[

    ////////////////////////////////////////////////////////////////////////////
    // Tests

    function matchesAnchorJumpInTabDocument(aTabIdx) {
      return evt => {
        let tabDoc = aTabIdx ? tabDocumentAt(aTabIdx) : currentTabDocument();
        let anchorAcc = getAccessible(tabDoc.querySelector("a[name='link1']"));
        return anchorAcc == evt.accessible;
      }
    }

    function matchesTabDocumentAt(aTabIdx) {
      return evt => {
        let tabDoc = aTabIdx ? tabDocumentAt(aTabIdx) : currentTabDocument();
        return getAccessible(tabDoc) == evt.accessible;
      }
    }

    async function doTest() {
      const URL = "http://mochi.test:8888/a11y/accessible/tests/mochitest/events/scroll.html#link1";
      let evtProm = waitForEvents([
        [EVENT_DOCUMENT_LOAD_COMPLETE, currentTabDocument],
        [EVENT_SCROLLING_START, matchesAnchorJumpInTabDocument()],
      ], "Load foreground tab then scroll to anchor");

      tabBrowser().loadURI(URL, {
        triggeringPrincipal: Services.scriptSecurityManager.getSystemPrincipal(),
      });
      // Flush layout, so as to guarantee that the a11y tree is constructed.
      browserDocument().documentElement.getBoundingClientRect();
      await evtProm;


      evtProm = waitForEvents({
        expected: [[EVENT_DOCUMENT_LOAD_COMPLETE, matchesTabDocumentAt(1)]],
        unexpected: [[EVENT_SCROLLING_START, matchesAnchorJumpInTabDocument(1)]],
      }, "Load background tab, don't dispatch scroll to anchor event");

      tabBrowser().addTab(URL, {
        referrerURI: null,
        charset: "",
        postData: null,
        inBackground: true,
        triggeringPrincipal: Services.scriptSecurityManager.getSystemPrincipal(),
      });
      // Flush layout, so as to guarantee that the a11y tree is constructed.
      browserDocument().documentElement.getBoundingClientRect();
      await evtProm;

      evtProm = waitForEvent(EVENT_SCROLLING_START,
        matchesAnchorJumpInTabDocument(),
        "Scroll to anchor event dispatched when switching to loaded doc.");
      tabBrowser().selectTabAtIndex(1);
      await evtProm;

      closeBrowserWindow();
      SimpleTest.finish();
    }

    SimpleTest.waitForExplicitFinish();
    openBrowserWindow(doTest);
  ]]>
  </script>

  <vbox flex="1" style="overflow: auto;">
    <body xmlns="http://www.w3.org/1999/xhtml">
      <a target="_blank"
         href="https://bugzilla.mozilla.org/show_bug.cgi?id=691734"
         title="Make sure scrolling start event is fired when document receive focus">
        Mozilla Bug 691734
      </a>

      <p id="display"></p>
      <div id="content" style="display: none">
      </div>
      <pre id="test">
      </pre>
    </body>

    <vbox id="eventdump"></vbox>
  </vbox>
</window>
