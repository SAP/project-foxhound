diff --git a/package.json b/package.json
index ed20d1d..53a447a 100644
--- a/package.json
+++ b/package.json
@@ -6,7 +6,7 @@
   "types": "./types/transformers.d.ts",
   "type": "module",
   "scripts": {
-    "typegen": "tsc ./src/transformers.js --allowJs --declaration --emitDeclarationOnly --declarationMap --outDir types",
+    "typegen": "tsc",
     "dev": "webpack serve --no-client-overlay",
     "build": "webpack && npm run typegen",
     "generate-tests": "python -m tests.generate_tests",
diff --git a/src/backends/onnx.js b/src/backends/onnx.js
index 0bee3dc..facc396 100644
--- a/src/backends/onnx.js
+++ b/src/backends/onnx.js
@@ -18,8 +18,11 @@
 
 // NOTE: Import order matters here. We need to import `onnxruntime-node` before `onnxruntime-web`.
 // In either case, we select the default export if it exists, otherwise we use the named export.
-import * as ONNX_NODE from 'onnxruntime-node';
-import * as ONNX_WEB from 'onnxruntime-web';
+
+import 'onnxruntime-web';
+const ONNX_WEB = ort;
+const ONNX_NODE = null;
+
 
 /** @type {import('onnxruntime-web')} The ONNX runtime module. */
 export let ONNX;
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..8892b18
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,13 @@
+{
+  "files": [
+    "./src/transformers.js"
+  ],
+  "compilerOptions": {
+    "allowJs": true,
+    "declaration": true,
+    "emitDeclarationOnly": true,
+    "declarationMap": true,
+    "outDir": "types",
+    "types": [] // Or specify only the types you need
+  }
+}
diff --git a/webpack.config.js b/webpack.config.js
index c958b45..40e27e4 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -2,21 +2,17 @@ import CopyWebpackPlugin from 'copy-webpack-plugin';
 import TerserPlugin from 'terser-webpack-plugin';
 import { fileURLToPath } from 'url';
 import path from 'path';
+import { merge } from 'webpack-merge';
 
 const __dirname = path.dirname(fileURLToPath(import.meta.url));
 
 /**
+ * Base configuration
  * @type {import('webpack').Configuration}
  */
-export default {
+const baseConfig = {
     mode: 'development',
     devtool: 'source-map',
-    entry: {
-        // include dist in entry point so that when running dev server,
-        // we can access the files with /dist/...
-        'dist/transformers': './src/transformers.js',
-        'dist/transformers.min': './src/transformers.js',
-    },
     output: {
         filename: '[name].js',
         path: __dirname,
@@ -25,30 +21,65 @@ export default {
         },
     },
     plugins: [
-        // Copy .wasm files to dist folder
         new CopyWebpackPlugin({
             patterns: [
                 {
                     from: 'node_modules/onnxruntime-web/dist/*.wasm',
-                    to: 'dist/[name][ext]'
+                    to: 'dist/[name][ext]',
                 },
             ],
         }),
     ],
     optimization: {
         minimize: true,
-        minimizer: [new TerserPlugin({
-            test: /\.min\.js$/,
-            extractComments: false,
-        })],
+        minimizer: [
+            new TerserPlugin({
+                test: /\.min\.js$/,
+                extractComments: false,
+            }),
+        ],
     },
     devServer: {
         static: {
-            directory: __dirname
+            directory: __dirname,
         },
-        port: 8080
+        port: 8080,
     },
     experiments: {
         outputModule: true,
     },
 };
+
+/**
+ * Non-minified specific configuration
+ * @type {import('webpack').Configuration}
+ */
+const nonMinifiedConfig = {
+    entry: {
+        'dist/transformers': './src/transformers.js',
+    },
+    externals: {
+        'onnxruntime-web': 'chrome://global/content/ml/ort-dev.js',
+    },
+};
+
+/**
+ * Minified specific configuration
+ * @type {import('webpack').Configuration}
+ */
+const minifiedConfig = {
+    entry: {
+        'dist/transformers.min': './src/transformers.js',
+    },
+    externals: {
+        'onnxruntime-web': 'chrome://global/content/ml/ort.js',
+    },
+};
+
+/**
+ * Exported configuration
+ */
+export default [
+    merge(baseConfig, nonMinifiedConfig),
+    merge(baseConfig, minifiedConfig),
+];
