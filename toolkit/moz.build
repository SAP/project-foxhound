# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

SPHINX_TREES["/toolkit"] = "docs"

EXTRA_COMPONENTS += [
    "l10n-registry.manifest",
]

DIRS += [
    "actors",
    "components",
    "content",
    "crashreporter",
    "locales",
    "modules",
    "mozapps/downloads",
    "mozapps/extensions",
    "mozapps/preferences",
    "profile",
    "themes",
]

if CONFIG["OS_ARCH"] == "WINNT":
    # mingw is missing Windows toast notification definitions.
    if CONFIG["CC_TYPE"] == "clang-cl":
        if CONFIG["MOZ_NOTIFICATION_SERVER"]:
            DIRS += ["mozapps/notificationserver"]

    if CONFIG["CC_TYPE"] == "clang-cl" or CONFIG["MOZ_ARTIFACT_BUILDS"]:
        # Default Browser Agent relies on Windows toast notifications, so should
        # also not be built with mingw.
        if CONFIG["MOZ_DEFAULT_BROWSER_AGENT"]:
            DIRS += ["mozapps/defaultagent"]

if CONFIG["MOZ_UPDATER"] and CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
    DIRS += ["mozapps/update"]

if CONFIG["MOZ_MAINTENANCE_SERVICE"] or CONFIG["MOZ_UPDATER"]:
    DIRS += [
        "mozapps/update/common",
    ]

if CONFIG["MOZ_MAINTENANCE_SERVICE"]:
    DIRS += ["components/maintenanceservice"]

DIRS += ["xre"]

if CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
    DIRS += ["mozapps/handling"]
if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
    DIRS += ["system/unixproxy"]
elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "cocoa":
    DIRS += [
        "mozapps/macos-frameworks",
        "system/commonproxy",
        "system/osxproxy",
    ]
elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "windows":
    DIRS += [
        "system/commonproxy",
        "system/windowsproxy",
        "system/windowsDHCPClient",
        "system/windowsPackageManager",
    ]
elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
    DIRS += ["system/androidproxy"]

TEST_HARNESS_FILES.testing.mochitest.browser.toolkit.crashreporter.test.browser += [
    "crashreporter/test/browser/crashreport.sjs",
]

with Files("docs/**"):
    BUG_COMPONENT = ("Toolkit", "General")

with Files("locales-preview/**"):
    BUG_COMPONENT = ("Toolkit", "General")

with Files("moz.*"):
    BUG_COMPONENT = ("Firefox Build System", "General")

with Files("toolkit.mozbuild"):
    BUG_COMPONENT = ("Firefox Build System", "General")

with Files("library/**"):
    BUG_COMPONENT = ("Firefox Build System", "General")

with Files("mozapps/preferences/**"):
    BUG_COMPONENT = ("Toolkit", "Preferences")

with Files("l10n-registry.manifest"):
    BUG_COMPONENT = ("Core", "Localization")

GeneratedFile(
    "content/neterror/aboutNetErrorCodes.js",
    script="content/neterror/gen_aboutneterror_codes.py",
    inputs=["/toolkit/locales/en-US/toolkit/neterror/nsserrors.ftl"],
)
