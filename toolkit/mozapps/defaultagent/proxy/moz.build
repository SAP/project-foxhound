# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

Program("default-browser-agent")

SPHINX_TREES["default-browser-agent"] = "docs"

UNIFIED_SOURCES += [
    "../EventLog.cpp",
    "../ScheduledTaskRemove.cpp",
    "main.cpp",
]

SOURCES += [
    "/browser/components/shell/WindowsDefaultBrowser.cpp",
    "/other-licenses/nsis/Contrib/CityHash/cityhash/city.cpp",
    "/toolkit/mozapps/update/common/readstrings.cpp",
]

LOCAL_INCLUDES += [
    "../",
    "/browser/components/shell/",
    "/mfbt/",
    "/other-licenses/nsis/Contrib/CityHash/cityhash",
    "/toolkit/mozapps/update/common/",
]

OS_LIBS += [
    "advapi32",
    "comsupp",
    "netapi32",
    "ole32",
    "oleaut32",
    "shell32",
    "shlwapi",
    "taskschd",
]

DEFINES["NS_NO_XPCOM"] = True
DEFINES["IMPL_MFBT"] = True

DEFINES["UNICODE"] = True
DEFINES["_UNICODE"] = True

for var in (
    "MOZ_APP_NAME",
    "MOZ_APP_DISPLAYNAME",
    "MOZ_APP_VENDOR",
    "MOZ_APP_BASENAME",
):
    DEFINES[var] = '"%s"' % CONFIG[var]

# We need STL headers that aren't allowed when wrapping is on (at least
# <filesystem>, and possibly others).
DisableStlWrapping()

# We need this to be able to use wmain as the entry point on MinGW;
# otherwise it will try to use WinMain.
if CONFIG["CC_TYPE"] == "clang-cl":
    WIN32_EXE_LDFLAGS += ["-ENTRY:wmainCRTStartup"]
else:
    WIN32_EXE_LDFLAGS += ["-municode"]

with Files("**"):
    BUG_COMPONENT = ("Toolkit", "Default Browser Agent")
