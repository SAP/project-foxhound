# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# !!! THIS FILE IS AUTOGENERATED USING gen_moz_build.py DO NOT EDIT !!!

with Files("**"):
    BUG_COMPONENT = ("Testing", "GTest")
    SCHEDULES.exclusive = ["gtest"]

if CONFIG["ENABLE_TESTS"]:

    EXPORTS.gtest.internal += [
        "googletest/include/gtest/internal/gtest-death-test-internal.h",
        "googletest/include/gtest/internal/gtest-filepath.h",
        "googletest/include/gtest/internal/gtest-internal.h",
        "googletest/include/gtest/internal/gtest-param-util.h",
        "googletest/include/gtest/internal/gtest-port-arch.h",
        "googletest/include/gtest/internal/gtest-port.h",
        "googletest/include/gtest/internal/gtest-string.h",
        "googletest/include/gtest/internal/gtest-type-util.h",
    ]
    EXPORTS.gtest += [
        "googletest/include/gtest/gtest-assertion-result.h",
        "googletest/include/gtest/gtest-death-test.h",
        "googletest/include/gtest/gtest-matchers.h",
        "googletest/include/gtest/gtest-message.h",
        "googletest/include/gtest/gtest-param-test.h",
        "googletest/include/gtest/gtest-printers.h",
        "googletest/include/gtest/gtest-spi.h",
        "googletest/include/gtest/gtest-test-part.h",
        "googletest/include/gtest/gtest-typed-test.h",
        "googletest/include/gtest/gtest.h",
        "googletest/include/gtest/gtest_pred_impl.h",
        "googletest/include/gtest/gtest_prod.h",
    ]
    
    EXPORTS.gmock.internal += [
        "googlemock/include/gmock/internal/gmock-internal-utils.h",
        "googlemock/include/gmock/internal/gmock-port.h",
        "googlemock/include/gmock/internal/gmock-pp.h",
    ]
    EXPORTS.gmock += [
        "googlemock/include/gmock/gmock-actions.h",
        "googlemock/include/gmock/gmock-cardinalities.h",
        "googlemock/include/gmock/gmock-function-mocker.h",
        "googlemock/include/gmock/gmock-matchers.h",
        "googlemock/include/gmock/gmock-more-actions.h",
        "googlemock/include/gmock/gmock-more-matchers.h",
        "googlemock/include/gmock/gmock-nice-strict.h",
        "googlemock/include/gmock/gmock-spec-builders.h",
        "googlemock/include/gmock/gmock.h",
    ]
    
    EXPORTS.testing.gtest.include.gtest.internal += [
        "googletest/include/gtest/internal/gtest-death-test-internal.h",
        "googletest/include/gtest/internal/gtest-filepath.h",
        "googletest/include/gtest/internal/gtest-internal.h",
        "googletest/include/gtest/internal/gtest-param-util.h",
        "googletest/include/gtest/internal/gtest-port-arch.h",
        "googletest/include/gtest/internal/gtest-port.h",
        "googletest/include/gtest/internal/gtest-string.h",
        "googletest/include/gtest/internal/gtest-type-util.h",
    ]
    EXPORTS.testing.gtest.include.gtest += [
        "googletest/include/gtest/gtest-assertion-result.h",
        "googletest/include/gtest/gtest-death-test.h",
        "googletest/include/gtest/gtest-matchers.h",
        "googletest/include/gtest/gtest-message.h",
        "googletest/include/gtest/gtest-param-test.h",
        "googletest/include/gtest/gtest-printers.h",
        "googletest/include/gtest/gtest-spi.h",
        "googletest/include/gtest/gtest-test-part.h",
        "googletest/include/gtest/gtest-typed-test.h",
        "googletest/include/gtest/gtest.h",
        "googletest/include/gtest/gtest_pred_impl.h",
        "googletest/include/gtest/gtest_prod.h",
    ]
    
    EXPORTS.testing.gmock.include.gmock.internal += [
        "googlemock/include/gmock/internal/gmock-internal-utils.h",
        "googlemock/include/gmock/internal/gmock-port.h",
        "googlemock/include/gmock/internal/gmock-pp.h",
    ]
    EXPORTS.testing.gmock.include.gmock += [
        "googlemock/include/gmock/gmock-actions.h",
        "googlemock/include/gmock/gmock-cardinalities.h",
        "googlemock/include/gmock/gmock-function-mocker.h",
        "googlemock/include/gmock/gmock-matchers.h",
        "googlemock/include/gmock/gmock-more-actions.h",
        "googlemock/include/gmock/gmock-more-matchers.h",
        "googlemock/include/gmock/gmock-nice-strict.h",
        "googlemock/include/gmock/gmock-spec-builders.h",
        "googlemock/include/gmock/gmock.h",
    ]
    

    SOURCES += [
        "googlemock/src/gmock-all.cc",
        "googletest/src/gtest-all.cc",
    ]

    Library("gtest")

    LOCAL_INCLUDES += [
        "googlemock",
        "googletest",
    ]

    if CONFIG["OS_ARCH"] == "WINNT":
        DEFINES["UNICODE"] = True

    FINAL_LIBRARY = "xul-gtest"
