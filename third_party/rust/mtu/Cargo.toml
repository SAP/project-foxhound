# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.76.0"
name = "mtu"
version = "0.2.6"
authors = ["The Mozilla Necko Team <necko@mozilla.com>"]
build = "build.rs"
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Obtain the local network interface MTU towards a given IP address."
homepage = "https://github.com/mozilla/mtu/"
readme = "README.md"
keywords = [
    "mozilla",
    "interface",
    "mtu",
]
categories = [
    "network-programming",
    "web-programming",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/mozilla/mtu/"

[lib]
name = "mtu"
path = "src/lib.rs"

[dependencies.libc]
version = "0.2"
default-features = false

[dependencies.static_assertions]
version = "1.1"
default-features = false

[build-dependencies.bindgen]
version = "0.69"
features = ["runtime"]
default-features = false

[build-dependencies.cfg_aliases]
version = "0.2"
default-features = false

[build-dependencies.mozbuild]
version = "0.1"
optional = true
default-features = false

[features]
gecko = ["dep:mozbuild"]

[target."cfg(windows)".dependencies.windows]
version = ">=0.58,<0.60"
features = [
    "Win32_Foundation",
    "Win32_NetworkManagement_IpHelper",
    "Win32_NetworkManagement_Ndis",
    "Win32_Networking_WinSock",
]

[badges.codecov]
branch = "main"
repository = "mozilla/mtu"

[badges.is-it-maintained-issue-resolution]
branch = "main"
repository = "mozilla/mtu"

[badges.is-it-maintained-open-issues]
branch = "main"
repository = "mozilla/mtu"

[badges.maintenance]
branch = "main"
status = "actively-developed"

[lints.clippy]
cfg_not_test = "warn"
clone_on_ref_ptr = "warn"
create_dir = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
multiple_crate_versions = "allow"
multiple_inherent_impl = "warn"
pathbuf_init_then_push = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
semicolon_inside_block = "warn"
try_err = "warn"
unneeded_field_pattern = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
unwrap_in_result = "warn"
unwrap_used = "warn"

[lints.clippy.cargo]
level = "warn"
priority = -1

[lints.clippy.nursery]
level = "warn"
priority = -1

[lints.clippy.pedantic]
level = "warn"
priority = -1

[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
ambiguous_negative_literals = "warn"
closure_returning_async_block = "warn"
explicit_outlives_requirements = "warn"
macro_use_extern_crate = "warn"
missing_abi = "warn"
non_ascii_idents = "warn"
redundant_imports = "warn"
redundant_lifetimes = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
