# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

with Files("**"):
    BUG_COMPONENT = ("Core", "DOM: Workers")

DIRS += ["remoteworkers", "sharedworkers", "loader"]

# Public stuff.
EXPORTS.mozilla.dom += [
    "ChromeWorker.h",
    "EventWithOptionsRunnable.h",
    "JSExecutionManager.h",
    "Worker.h",
    "WorkerChannelInfo.h",
    "WorkerCommon.h",
    "WorkerDebugger.h",
    "WorkerDebuggerManager.h",
    "WorkerDocumentListener.h",
    "WorkerError.h",
    "WorkerIPCUtils.h",
    "WorkerLoadInfo.h",
    "WorkerLocation.h",
    "WorkerNavigator.h",
    "WorkerPrivate.h",
    "WorkerRef.h",
    "WorkerRunnable.h",
    "WorkerScope.h",
    "WorkerStatus.h",
    "WorkerTestUtils.h",
]

# Private stuff.
EXPORTS.mozilla.dom.workerinternals += [
    "JSSettings.h",
    "Queue.h",
    "RuntimeService.h",
    "ScriptLoader.h",
]

XPIDL_MODULE = "dom_workers"

XPIDL_SOURCES += [
    "nsIWorkerChannelInfo.idl",
    "nsIWorkerDebugger.idl",
    "nsIWorkerDebuggerManager.idl",
]

UNIFIED_SOURCES += [
    "ChromeWorker.cpp",
    "ChromeWorkerScope.cpp",
    "EventWithOptionsRunnable.cpp",
    "JSExecutionManager.cpp",
    "MessageEventRunnable.cpp",
    "RegisterBindings.cpp",
    "RuntimeService.cpp",
    "ScriptLoader.cpp",
    "Worker.cpp",
    "WorkerChannelInfo.cpp",
    "WorkerCSPEventListener.cpp",
    "WorkerDebugger.cpp",
    "WorkerDebuggerManager.cpp",
    "WorkerDocumentListener.cpp",
    "WorkerError.cpp",
    "WorkerEventTarget.cpp",
    "WorkerLoadInfo.cpp",
    "WorkerLocation.cpp",
    "WorkerNavigator.cpp",
    "WorkerPrivate.cpp",
    "WorkerRef.cpp",
    "WorkerRunnable.cpp",
    "WorkerScope.cpp",
    "WorkerTestUtils.cpp",
    "WorkerThread.cpp",
]

LOCAL_INCLUDES += [
    "/caps",
    "/dom/base",
    "/dom/bindings",
    "/dom/system",
    "/dom/workers/remoteworkers",
    "/js/xpconnect/loader",
    "/netwerk/base",
    "/xpcom/build",
    "/xpcom/threads",
]

if CONFIG["MOZ_WIDGET_TOOLKIT"] == "cocoa":
    LOCAL_INCLUDES += [
        "/xpcom/base",
    ]


include("/ipc/chromium/chromium-config.mozbuild")

FINAL_LIBRARY = "xul"

MOCHITEST_MANIFESTS += [
    "test/mochitest.toml",
]

MOCHITEST_CHROME_MANIFESTS += [
    "test/chrome.toml",
]

MARIONETTE_MANIFESTS += ["test/marionette/manifest.toml"]

XPCSHELL_TESTS_MANIFESTS += ["test/xpcshell/xpcshell.toml"]

BROWSER_CHROME_MANIFESTS += ["test/browser.toml"]
