/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PGMPContent;
include GMPTypes;

using GMPVideoCodec from "gmp-video-codec.h";
using GMPVideoFrameType from "gmp-video-frame-encoded.h";
using GMPErr from "gmp-errors.h";

include "GMPMessageUtils.h";
include "GMPVideoEncoderChild.h";

namespace mozilla {
namespace gmp {

[ChildImpl="GMPVideoEncoderChild", ParentImpl=virtual]
async protocol PGMPVideoEncoder
{
  manager PGMPContent;
child:
  async InitEncode(GMPVideoCodec aCodecSettings,
                   uint8_t[] aCodecSpecific,
                   int32_t aNumberOfCores,
                   uint32_t aMaxPayloadSize);
  async GiveShmem(Shmem aOutputShmem);
  async Encode(GMPVideoi420FrameData aInputFrame,
               Shmem aInputShmem,
               uint8_t[] aCodecSpecificInfo,
               GMPVideoFrameType[] aFrameTypes);
  async SetChannelParameters(uint32_t aPacketLoss, uint32_t aRTT);
  async SetRates(uint32_t aNewBitRate, uint32_t aFrameRate);
  async SetPeriodicKeyFrames(bool aEnable);
  async __delete__();

parent:
  async ReturnShmem(Shmem aInputShmem);
  async EncodedShmem(GMPVideoEncodedFrameData aEncodedFrame,
                Shmem aEncodedShmem,
                uint8_t[] aCodecSpecificInfo);
  async EncodedData(GMPVideoEncodedFrameData aEncodedFrame,
                uint8_t[] aEncodedData,
                uint8_t[] aCodecSpecificInfo);
  async Error(GMPErr aErr);
  async Shutdown();
};

} // namespace gmp
} // namespace mozilla
